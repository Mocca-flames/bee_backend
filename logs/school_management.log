2025-09-03 23:18:58,945 - school_management - ERROR - SMS send failed: Authentication failed - check BulkSMS credentials
2025-09-03 23:18:58,971 - school_management - ERROR - Failed to log SMS result to database: 1 validation error for SMSLogCreate
student_id
  Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1 [type=uuid_parsing, input_value='test_student_id', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/uuid_parsing
2025-09-03 23:19:30,398 - school_management - ERROR - SMS send failed for student test_student_id to d5567c08-6162-4a1d-b9b0-4966d6952e74: Invalid phone number - Invalid South African phone number format: 'd5567c08-6162-4a1d-b9b0-4966d6952e74'. Must start with '0', '27', or '+27'.
2025-09-03 23:19:30,407 - school_management - ERROR - Failed to log SMS result to database: 2 validation errors for SMSLogCreate
student_id
  Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1 [type=uuid_parsing, input_value='test_student_id', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/uuid_parsing
recipient_phone
  String should have at most 12 characters [type=string_too_long, input_value='d5567c08-6162-4a1d-b9b0-4966d6952e74', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/string_too_long
2025-09-14 06:43:28,263 - school_management - ERROR - Database error generating statistics: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "students" does not exist
[SQL: SELECT count(students.id) AS count_1 
FROM students]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-09-14 06:43:28,290 - school_management - INFO - GET /api/students/statistics - 500 - 0.2838s
2025-09-14 06:43:28,306 - school_management - ERROR - Database error generating statistics: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedTableError'>: relation "students" does not exist
[SQL: SELECT count(students.id) AS count_1 
FROM students]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-09-14 06:43:28,311 - school_management - INFO - GET /api/students/statistics - 500 - 0.0101s
2025-09-14 06:48:34,526 - school_management - INFO - Generated student statistics
2025-09-14 06:48:34,532 - school_management - INFO - GET /api/students/statistics - 200 - 0.1668s
2025-09-14 06:48:34,566 - school_management - INFO - Generated student statistics
2025-09-14 06:48:34,571 - school_management - INFO - GET /api/students/statistics - 200 - 0.0288s
2025-09-14 06:48:37,236 - school_management - INFO - Fetched 0 students
2025-09-14 06:48:37,247 - school_management - INFO - GET /api/students/ - 200 - 0.0207s
2025-09-14 06:48:37,267 - school_management - INFO - Fetched 0 students
2025-09-14 06:48:37,287 - school_management - INFO - GET /api/students/ - 200 - 0.0241s
2025-09-14 06:48:37,331 - school_management - INFO - Fetched 0 students
2025-09-14 06:48:37,335 - school_management - INFO - GET /api/students/ - 200 - 0.0081s
2025-09-14 06:48:38,982 - school_management - INFO - Fetched 0 students
2025-09-14 06:48:38,988 - school_management - INFO - GET /api/students/ - 200 - 0.0250s
2025-09-14 06:48:39,098 - school_management - INFO - Fetched 0 students
2025-09-14 06:48:39,103 - school_management - INFO - GET /api/students/ - 200 - 0.1069s
2025-09-14 06:48:39,118 - school_management - INFO - Fetched 0 students
2025-09-14 06:48:39,128 - school_management - INFO - GET /api/students/ - 200 - 0.0138s
2025-09-14 06:48:39,138 - school_management - INFO - GET /api/sms/history - 200 - 0.1708s
2025-09-14 06:48:39,147 - school_management - INFO - Fetched 0 students
2025-09-14 06:48:39,161 - school_management - INFO - GET /api/students/ - 200 - 0.0167s
2025-09-14 06:48:39,169 - school_management - INFO - GET /api/sms/history - 200 - 0.0164s
2025-09-14 06:48:39,184 - school_management - INFO - GET /api/sms/history - 200 - 0.0078s
2025-09-14 06:50:16,274 - school_management - INFO - Fetched available grades
2025-09-14 06:50:16,283 - school_management - INFO - GET /api/students/grades - 200 - 0.0091s
2025-09-14 06:50:16,292 - school_management - INFO - Fetched available grades
2025-09-14 06:50:16,299 - school_management - INFO - GET /api/students/grades - 200 - 0.0072s
2025-09-15 07:39:39,846 - school_management - INFO - Generated student statistics
2025-09-15 07:39:39,859 - school_management - INFO - GET /api/students/statistics - 200 - 0.8355s
2025-09-15 07:39:39,893 - school_management - INFO - Generated student statistics
2025-09-15 07:39:39,897 - school_management - INFO - GET /api/students/statistics - 200 - 0.0247s
2025-09-15 07:40:06,677 - school_management - INFO - Fetched 0 students
2025-09-15 07:40:06,689 - school_management - INFO - GET /api/students/ - 200 - 0.0328s
2025-09-15 07:40:06,706 - school_management - INFO - Fetched 0 students
2025-09-15 07:40:06,709 - school_management - INFO - GET /api/students/ - 200 - 0.0108s
2025-09-15 07:40:06,734 - school_management - INFO - Fetched 0 students
2025-09-15 07:40:06,738 - school_management - INFO - GET /api/students/ - 200 - 0.0204s
2025-09-15 07:40:08,535 - school_management - INFO - GET /api/sms/history - 200 - 0.2535s
2025-09-15 07:40:08,556 - school_management - INFO - GET /api/sms/history - 200 - 0.0061s
2025-09-15 07:40:08,592 - school_management - INFO - Fetched 0 students
2025-09-15 07:40:08,605 - school_management - INFO - GET /api/sms/history - 200 - 0.0298s
2025-09-15 07:40:08,609 - school_management - INFO - GET /api/students/ - 200 - 0.3106s
2025-09-15 07:40:08,628 - school_management - INFO - Fetched 0 students
2025-09-15 07:40:08,632 - school_management - INFO - GET /api/students/ - 200 - 0.0084s
2025-09-15 07:40:08,659 - school_management - INFO - Fetched 0 students
2025-09-15 07:40:08,663 - school_management - INFO - GET /api/students/ - 200 - 0.0158s
2025-09-15 07:40:08,683 - school_management - INFO - Fetched 0 students
2025-09-15 07:40:08,686 - school_management - INFO - GET /api/students/ - 200 - 0.0105s
2025-09-15 07:40:13,244 - school_management - INFO - Fetched 0 students
2025-09-15 07:40:13,248 - school_management - INFO - GET /api/students/ - 200 - 0.0081s
2025-09-15 07:40:13,263 - school_management - INFO - Fetched 0 students
2025-09-15 07:40:13,272 - school_management - INFO - GET /api/students/ - 200 - 0.0164s
2025-09-15 07:40:13,283 - school_management - INFO - Fetched 0 students
2025-09-15 07:40:13,294 - school_management - INFO - GET /api/students/ - 200 - 0.0156s
2025-09-15 07:40:15,203 - school_management - INFO - Generated student statistics
2025-09-15 07:40:15,233 - school_management - INFO - GET /api/students/statistics - 200 - 0.0655s
2025-09-15 07:40:15,307 - school_management - INFO - Generated student statistics
2025-09-15 07:40:15,324 - school_management - INFO - GET /api/students/statistics - 200 - 0.0639s
2025-09-15 07:43:18,338 - school_management - INFO - Generated student statistics
2025-09-15 07:43:18,354 - school_management - INFO - GET /api/students/statistics - 200 - 0.1190s
2025-09-15 07:43:18,444 - school_management - INFO - Generated student statistics
2025-09-15 07:43:18,548 - school_management - INFO - GET /api/students/statistics - 200 - 0.1379s
2025-09-15 08:12:33,761 - school_management - INFO - GET /docs - 200 - 0.0011s
2025-09-15 08:12:35,907 - school_management - INFO - GET /openapi.json - 200 - 0.1018s
2025-09-15 08:14:04,835 - school_management - INFO - POST /api/students/ - 422 - 0.0467s
2025-09-15 08:14:38,447 - school_management - INFO - Created student: 67865744-06f1-4d68-bd85-81775e656bd2, Grade: Grade 7, Class: W
2025-09-15 08:14:38,465 - school_management - INFO - POST /api/students/ - 201 - 0.1980s
2025-09-15 08:14:53,124 - school_management - INFO - Generated student statistics including breakdown by grade and class
2025-09-15 08:14:53,138 - school_management - INFO - GET /api/students/statistics - 200 - 0.0877s
2025-09-15 08:14:53,192 - school_management - INFO - Generated student statistics including breakdown by grade and class
2025-09-15 08:14:53,222 - school_management - INFO - GET /api/students/statistics - 200 - 0.0519s
2025-09-15 08:14:56,714 - school_management - INFO - Fetched 1 students
2025-09-15 08:14:56,725 - school_management - INFO - GET /api/students/ - 200 - 0.0223s
2025-09-15 08:14:56,744 - school_management - INFO - Fetched 1 students
2025-09-15 08:14:56,757 - school_management - INFO - GET /api/students/ - 200 - 0.0182s
2025-09-15 08:14:56,788 - school_management - INFO - Fetched 1 students
2025-09-15 08:14:56,793 - school_management - INFO - GET /api/students/ - 200 - 0.0173s
2025-09-15 08:22:21,965 - school_management - INFO - Fetched available classes for grade Grade 7: ['W']
2025-09-15 08:22:21,973 - school_management - INFO - GET /api/students/classes/Grade 7 - 200 - 0.0431s
2025-09-15 08:36:16,484 - school_management - INFO - Fetched 1 students
2025-09-15 08:36:16,502 - school_management - INFO - GET /api/students/ - 200 - 0.0604s
2025-09-15 08:38:52,928 - school_management - INFO - Fetched 1 students
2025-09-15 08:38:53,058 - school_management - INFO - GET /api/students/ - 200 - 0.3622s
2025-09-15 08:38:54,725 - school_management - INFO - Fetched 1 students
2025-09-15 08:38:54,729 - school_management - INFO - GET /api/students/ - 200 - 0.4343s
2025-09-15 08:38:55,091 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:38:55,177 - school_management - INFO - GET /api/students/grades - 200 - 2.3839s
2025-09-15 08:38:55,211 - school_management - INFO - Fetched 1 students
2025-09-15 08:38:55,301 - school_management - INFO - GET /api/students/ - 200 - 0.1351s
2025-09-15 08:38:55,398 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:38:55,450 - school_management - INFO - GET /api/students/grades - 200 - 0.0550s
2025-09-15 08:38:55,484 - school_management - INFO - Fetched 1 students
2025-09-15 08:38:55,524 - school_management - INFO - GET /api/students/ - 200 - 0.0781s
2025-09-15 08:41:18,960 - school_management - INFO - Generated student statistics including breakdown by grade and class
2025-09-15 08:41:19,001 - school_management - INFO - GET /api/students/statistics - 200 - 0.1700s
2025-09-15 08:41:19,369 - school_management - INFO - Generated student statistics including breakdown by grade and class
2025-09-15 08:41:19,452 - school_management - INFO - GET /api/students/statistics - 200 - 0.3344s
2025-09-15 08:41:28,294 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:41:28,301 - school_management - INFO - Fetched 1 students
2025-09-15 08:41:28,312 - school_management - INFO - GET /api/students/grades - 200 - 0.0376s
2025-09-15 08:41:28,327 - school_management - INFO - GET /api/students/ - 200 - 0.0472s
2025-09-15 08:41:28,341 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:41:28,363 - school_management - INFO - GET /api/students/grades - 200 - 0.0392s
2025-09-15 08:41:28,377 - school_management - INFO - Fetched 1 students
2025-09-15 08:41:28,391 - school_management - INFO - GET /api/students/ - 200 - 0.0322s
2025-09-15 08:41:28,437 - school_management - INFO - Fetched 1 students
2025-09-15 08:41:28,447 - school_management - INFO - GET /api/students/ - 200 - 0.0203s
2025-09-15 08:42:29,082 - school_management - INFO - Fetched 1 students
2025-09-15 08:42:29,099 - school_management - INFO - GET /api/students/ - 200 - 0.0336s
2025-09-15 08:42:32,242 - school_management - INFO - GET /api/students/classes/1 - 400 - 0.0070s
2025-09-15 08:42:32,311 - school_management - INFO - Fetched 0 students for grade 1
2025-09-15 08:42:32,322 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:42:32,328 - school_management - INFO - GET /api/students/ - 200 - 0.0403s
2025-09-15 08:42:32,339 - school_management - INFO - GET /api/students/grades - 200 - 0.0331s
2025-09-15 08:42:42,237 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:42:42,293 - school_management - INFO - GET /api/students/classes/4 - 400 - 0.0589s
2025-09-15 08:42:42,386 - school_management - INFO - GET /api/students/grades - 200 - 0.2042s
2025-09-15 08:42:42,453 - school_management - INFO - Fetched 0 students for grade 4
2025-09-15 08:42:42,473 - school_management - INFO - GET /api/students/ - 200 - 0.1906s
2025-09-15 08:42:46,699 - school_management - INFO - GET /api/students/classes/7 - 400 - 0.0105s
2025-09-15 08:42:46,732 - school_management - INFO - Fetched 0 students for grade 7
2025-09-15 08:42:46,741 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:42:46,750 - school_management - INFO - GET /api/students/ - 200 - 0.0597s
2025-09-15 08:42:46,761 - school_management - INFO - GET /api/students/grades - 200 - 0.0535s
2025-09-15 08:42:57,325 - school_management - INFO - Fetched 0 students for grade 1
2025-09-15 08:42:57,341 - school_management - INFO - GET /api/students/ - 200 - 0.0288s
2025-09-15 08:42:57,363 - school_management - INFO - GET /api/students/classes/1 - 400 - 0.0273s
2025-09-15 08:42:57,433 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:42:57,458 - school_management - INFO - GET /api/students/grades - 200 - 0.1216s
2025-09-15 08:42:59,052 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:42:59,083 - school_management - INFO - Fetched 1 students
2025-09-15 08:42:59,138 - school_management - INFO - GET /api/students/grades - 200 - 0.1019s
2025-09-15 08:42:59,168 - school_management - INFO - GET /api/students/ - 200 - 0.1279s
2025-09-15 08:42:59,226 - school_management - INFO - Fetched 1 students
2025-09-15 08:42:59,249 - school_management - INFO - GET /api/students/ - 200 - 0.0281s
2025-09-15 08:46:41,347 - school_management - INFO - Fetched 1 students
2025-09-15 08:46:41,400 - school_management - INFO - GET /api/students/ - 200 - 0.0955s
2025-09-15 08:46:41,434 - school_management - INFO - GET /api/sms/history - 200 - 0.0811s
2025-09-15 08:46:41,438 - school_management - INFO - Fetched 1 students
2025-09-15 08:46:41,457 - school_management - INFO - GET /api/students/ - 200 - 0.0374s
2025-09-15 08:46:41,518 - school_management - INFO - GET /api/sms/history - 200 - 0.0645s
2025-09-15 08:46:41,536 - school_management - INFO - Fetched 1 students
2025-09-15 08:46:41,570 - school_management - INFO - GET /api/students/ - 200 - 0.0446s
2025-09-15 08:46:41,586 - school_management - INFO - GET /api/sms/history - 200 - 0.0314s
2025-09-15 08:46:41,612 - school_management - INFO - Fetched 1 students
2025-09-15 08:46:41,618 - school_management - INFO - GET /api/students/ - 200 - 0.0260s
2025-09-15 08:46:45,052 - school_management - INFO - Fetched student: 67865744-06f1-4d68-bd85-81775e656bd2
2025-09-15 08:46:45,059 - school_management - INFO - GET /api/students/67865744-06f1-4d68-bd85-81775e656bd2 - 200 - 0.0371s
2025-09-15 08:47:19,617 - school_management - INFO - Fetched 1 students
2025-09-15 08:47:19,699 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:47:19,752 - school_management - INFO - GET /api/students/ - 200 - 0.1534s
2025-09-15 08:47:19,803 - school_management - INFO - GET /api/students/grades - 200 - 0.1990s
2025-09-15 08:47:19,887 - school_management - INFO - Fetched 1 students
2025-09-15 08:47:19,956 - school_management - INFO - GET /api/students/ - 200 - 0.0731s
2025-09-15 08:47:20,010 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:47:20,078 - school_management - INFO - GET /api/students/grades - 200 - 0.0718s
2025-09-15 08:47:20,135 - school_management - INFO - Fetched 1 students
2025-09-15 08:47:20,179 - school_management - INFO - GET /api/students/ - 200 - 0.0495s
2025-09-15 08:54:05,844 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:54:05,948 - school_management - INFO - Fetched 1 students
2025-09-15 08:54:05,976 - school_management - INFO - GET /api/students/grades - 200 - 0.1691s
2025-09-15 08:54:05,993 - school_management - INFO - GET /api/students/ - 200 - 0.2326s
2025-09-15 08:54:06,009 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:54:06,048 - school_management - INFO - GET /api/students/grades - 200 - 0.0425s
2025-09-15 08:54:06,099 - school_management - INFO - Fetched 1 students
2025-09-15 08:54:06,112 - school_management - INFO - GET /api/students/ - 200 - 0.0692s
2025-09-15 08:54:06,161 - school_management - INFO - Fetched 1 students
2025-09-15 08:54:06,168 - school_management - INFO - GET /api/students/ - 200 - 0.0119s
2025-09-15 08:55:19,560 - school_management - INFO - Generated student statistics including breakdown by grade and class
2025-09-15 08:55:19,600 - school_management - INFO - GET /api/students/statistics - 200 - 0.1129s
2025-09-15 08:55:20,001 - school_management - INFO - Generated student statistics including breakdown by grade and class
2025-09-15 08:55:20,031 - school_management - INFO - GET /api/students/statistics - 200 - 0.0724s
2025-09-15 08:55:25,702 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:55:25,725 - school_management - INFO - GET /api/students/grades - 200 - 0.0271s
2025-09-15 08:55:25,738 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:25,773 - school_management - INFO - GET /api/students/ - 200 - 0.0511s
2025-09-15 08:55:25,788 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:55:25,827 - school_management - INFO - GET /api/students/grades - 200 - 0.0568s
2025-09-15 08:55:25,881 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:25,928 - school_management - INFO - GET /api/students/ - 200 - 0.1056s
2025-09-15 08:55:25,963 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:26,012 - school_management - INFO - GET /api/students/ - 200 - 0.0534s
2025-09-15 08:55:27,179 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:27,198 - school_management - INFO - GET /api/students/ - 200 - 0.0226s
2025-09-15 08:55:27,211 - school_management - INFO - GET /api/sms/history - 200 - 0.0203s
2025-09-15 08:55:27,229 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:27,267 - school_management - INFO - GET /api/students/ - 200 - 0.0425s
2025-09-15 08:55:27,279 - school_management - INFO - GET /api/sms/history - 200 - 0.0167s
2025-09-15 08:55:27,312 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:27,345 - school_management - INFO - GET /api/students/ - 200 - 0.0370s
2025-09-15 08:55:27,377 - school_management - INFO - GET /api/sms/history - 200 - 0.0065s
2025-09-15 08:55:27,399 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:27,412 - school_management - INFO - GET /api/students/ - 200 - 0.0175s
2025-09-15 08:55:28,834 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:55:28,860 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:28,877 - school_management - INFO - GET /api/students/grades - 200 - 0.0496s
2025-09-15 08:55:28,884 - school_management - INFO - GET /api/students/ - 200 - 0.0537s
2025-09-15 08:55:28,914 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:55:28,953 - school_management - INFO - GET /api/students/grades - 200 - 0.0427s
2025-09-15 08:55:29,024 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:29,032 - school_management - INFO - GET /api/students/ - 200 - 0.0824s
2025-09-15 08:55:29,055 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:29,067 - school_management - INFO - GET /api/students/ - 200 - 0.0170s
2025-09-15 08:55:30,491 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:30,768 - school_management - INFO - GET /api/students/ - 200 - 0.3081s
2025-09-15 08:55:30,867 - school_management - INFO - GET /api/sms/history - 200 - 0.3873s
2025-09-15 08:55:30,906 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:30,959 - school_management - INFO - GET /api/students/ - 200 - 0.0589s
2025-09-15 08:55:30,969 - school_management - INFO - GET /api/sms/history - 200 - 0.0174s
2025-09-15 08:55:30,985 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:31,000 - school_management - INFO - GET /api/students/ - 200 - 0.0206s
2025-09-15 08:55:31,012 - school_management - INFO - GET /api/sms/history - 200 - 0.0169s
2025-09-15 08:55:31,063 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:31,077 - school_management - INFO - GET /api/students/ - 200 - 0.0276s
2025-09-15 08:55:36,155 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:55:36,167 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:36,176 - school_management - INFO - GET /api/students/grades - 200 - 0.0288s
2025-09-15 08:55:36,182 - school_management - INFO - GET /api/students/ - 200 - 0.0302s
2025-09-15 08:55:36,206 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:55:36,237 - school_management - INFO - GET /api/students/grades - 200 - 0.0391s
2025-09-15 08:55:36,268 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:36,282 - school_management - INFO - GET /api/students/ - 200 - 0.0480s
2025-09-15 08:55:36,322 - school_management - INFO - Fetched 1 students
2025-09-15 08:55:36,334 - school_management - INFO - GET /api/students/ - 200 - 0.0164s
2025-09-15 08:55:43,061 - school_management - INFO - Generated student statistics including breakdown by grade and class
2025-09-15 08:55:43,070 - school_management - INFO - GET /api/students/statistics - 200 - 0.0294s
2025-09-15 08:55:43,102 - school_management - INFO - Generated student statistics including breakdown by grade and class
2025-09-15 08:55:43,140 - school_management - INFO - GET /api/students/statistics - 200 - 0.0537s
2025-09-15 08:56:04,673 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:56:04,735 - school_management - INFO - GET /api/students/grades - 200 - 0.0695s
2025-09-15 08:56:04,823 - school_management - INFO - Fetched 1 students
2025-09-15 08:56:04,868 - school_management - INFO - GET /api/students/ - 200 - 0.1804s
2025-09-15 08:56:04,917 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 08:56:05,001 - school_management - INFO - GET /api/students/grades - 200 - 0.0883s
2025-09-15 08:56:05,022 - school_management - INFO - Fetched 1 students
2025-09-15 08:56:05,044 - school_management - INFO - GET /api/students/ - 200 - 0.0471s
2025-09-15 08:56:05,148 - school_management - INFO - Fetched 1 students
2025-09-15 08:56:05,166 - school_management - INFO - GET /api/students/ - 200 - 0.0230s
2025-09-15 09:01:53,071 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:01:53,222 - school_management - INFO - Fetched 1 students
2025-09-15 09:01:53,277 - school_management - INFO - GET /api/students/grades - 200 - 0.2918s
2025-09-15 09:01:53,320 - school_management - INFO - GET /api/students/ - 200 - 0.3179s
2025-09-15 09:01:53,356 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:01:53,360 - school_management - INFO - GET /api/students/grades - 200 - 0.0077s
2025-09-15 09:01:53,393 - school_management - INFO - Fetched 1 students
2025-09-15 09:01:53,430 - school_management - INFO - GET /api/students/ - 200 - 0.0406s
2025-09-15 09:01:53,505 - school_management - INFO - Fetched 1 students
2025-09-15 09:01:53,512 - school_management - INFO - GET /api/students/ - 200 - 0.0108s
2025-09-15 09:07:12,952 - school_management - INFO - Fetched 1 students
2025-09-15 09:07:12,968 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:07:12,985 - school_management - INFO - GET /api/students/ - 200 - 0.1118s
2025-09-15 09:07:13,005 - school_management - INFO - GET /api/students/grades - 200 - 0.0674s
2025-09-15 09:07:13,028 - school_management - INFO - Fetched 1 students
2025-09-15 09:07:13,057 - school_management - INFO - GET /api/students/ - 200 - 0.0346s
2025-09-15 09:07:13,089 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:07:13,122 - school_management - INFO - GET /api/students/grades - 200 - 0.0681s
2025-09-15 09:07:13,240 - school_management - INFO - Fetched 1 students
2025-09-15 09:07:13,304 - school_management - INFO - GET /api/students/ - 200 - 0.1871s
2025-09-15 09:07:29,230 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:07:29,245 - school_management - INFO - Fetched 1 students
2025-09-15 09:07:29,253 - school_management - INFO - GET /api/students/grades - 200 - 0.0502s
2025-09-15 09:07:29,265 - school_management - INFO - GET /api/students/ - 200 - 0.0476s
2025-09-15 09:07:29,292 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:07:29,337 - school_management - INFO - GET /api/students/grades - 200 - 0.0490s
2025-09-15 09:07:29,373 - school_management - INFO - Fetched 1 students
2025-09-15 09:07:29,551 - school_management - INFO - GET /api/students/ - 200 - 0.2183s
2025-09-15 09:07:29,663 - school_management - INFO - Fetched 1 students
2025-09-15 09:07:29,698 - school_management - INFO - GET /api/students/ - 200 - 0.0496s
2025-09-15 09:11:51,267 - school_management - INFO - Fetched 1 students
2025-09-15 09:11:51,318 - school_management - INFO - GET /api/students/ - 200 - 0.0866s
2025-09-15 09:12:38,849 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:12:38,862 - school_management - INFO - GET /api/students/grades - 200 - 0.0365s
2025-09-15 09:12:38,868 - school_management - INFO - Fetched student: 67865744-06f1-4d68-bd85-81775e656bd2
2025-09-15 09:12:38,888 - school_management - INFO - GET /api/students/67865744-06f1-4d68-bd85-81775e656bd2 - 200 - 0.0335s
2025-09-15 09:12:38,892 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:12:38,911 - school_management - INFO - GET /api/students/grades - 200 - 0.0369s
2025-09-15 09:12:38,921 - school_management - INFO - Fetched available classes for grade Grade 7: ['W']
2025-09-15 09:12:38,926 - school_management - INFO - GET /api/students/classes/Grade 7 - 200 - 0.0243s
2025-09-15 09:12:38,938 - school_management - INFO - Fetched student: 67865744-06f1-4d68-bd85-81775e656bd2
2025-09-15 09:12:38,943 - school_management - INFO - GET /api/students/67865744-06f1-4d68-bd85-81775e656bd2 - 200 - 0.0252s
2025-09-15 09:31:35,747 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:31:35,759 - school_management - INFO - GET /api/students/grades - 200 - 0.1088s
2025-09-15 09:31:36,051 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:31:36,066 - school_management - INFO - GET /api/students/grades - 200 - 0.0290s
2025-09-15 09:31:36,112 - school_management - INFO - Fetched 1 students
2025-09-15 09:31:36,128 - school_management - INFO - GET /api/students/ - 200 - 0.3970s
2025-09-15 09:31:36,157 - school_management - INFO - Fetched 1 students
2025-09-15 09:31:36,209 - school_management - INFO - GET /api/students/ - 200 - 0.0586s
2025-09-15 09:31:36,421 - school_management - INFO - Fetched 1 students
2025-09-15 09:31:36,452 - school_management - INFO - GET /api/students/ - 200 - 0.0525s
2025-09-15 09:32:20,575 - school_management - INFO - Fetched student: 67865744-06f1-4d68-bd85-81775e656bd2
2025-09-15 09:32:20,585 - school_management - INFO - GET /api/students/67865744-06f1-4d68-bd85-81775e656bd2 - 200 - 0.0323s
2025-09-15 09:32:20,612 - school_management - INFO - Fetched student: 67865744-06f1-4d68-bd85-81775e656bd2
2025-09-15 09:32:20,616 - school_management - INFO - GET /api/students/67865744-06f1-4d68-bd85-81775e656bd2 - 200 - 0.0203s
2025-09-15 09:34:27,399 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: unpaid
2025-09-15 09:34:27,404 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0942s
2025-09-15 09:34:29,602 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: paid
2025-09-15 09:34:29,611 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0646s
2025-09-15 09:34:30,642 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: unpaid
2025-09-15 09:34:30,647 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0517s
2025-09-15 09:34:31,134 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: paid
2025-09-15 09:34:31,141 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0587s
2025-09-15 09:34:31,542 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: unpaid
2025-09-15 09:34:31,549 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0740s
2025-09-15 09:34:31,727 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: paid
2025-09-15 09:34:31,732 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0549s
2025-09-15 09:34:31,950 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: unpaid
2025-09-15 09:34:31,963 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0553s
2025-09-15 09:34:32,168 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: paid
2025-09-15 09:34:32,185 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0781s
2025-09-15 09:34:32,307 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: unpaid
2025-09-15 09:34:32,313 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0476s
2025-09-15 09:34:33,081 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: paid
2025-09-15 09:34:33,090 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0555s
2025-09-15 09:34:33,565 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: unpaid
2025-09-15 09:34:33,571 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0543s
2025-09-15 09:34:33,997 - school_management - INFO - Updated fee status for student 67865744-06f1-4d68-bd85-81775e656bd2: paid
2025-09-15 09:34:34,002 - school_management - INFO - PATCH /api/students/67865744-06f1-4d68-bd85-81775e656bd2/fee-status - 200 - 0.0488s
2025-09-15 09:34:36,942 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:34:36,967 - school_management - INFO - GET /api/students/grades - 200 - 0.0295s
2025-09-15 09:34:36,987 - school_management - INFO - Fetched 1 students
2025-09-15 09:34:37,001 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:34:37,009 - school_management - INFO - GET /api/students/ - 200 - 0.0340s
2025-09-15 09:34:37,018 - school_management - INFO - GET /api/students/grades - 200 - 0.0342s
2025-09-15 09:34:37,050 - school_management - INFO - Fetched 1 students
2025-09-15 09:34:37,067 - school_management - INFO - GET /api/students/ - 200 - 0.0225s
2025-09-15 09:34:37,094 - school_management - INFO - Fetched 1 students
2025-09-15 09:34:37,104 - school_management - INFO - GET /api/students/ - 200 - 0.0171s
2025-09-15 09:34:43,619 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:34:43,626 - school_management - INFO - GET /api/students/grades - 200 - 0.0126s
2025-09-15 09:34:43,644 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 09:34:43,665 - school_management - INFO - GET /api/students/grades - 200 - 0.0240s
2025-09-15 09:34:43,724 - school_management - INFO - Fetched available classes for grade Grade 7: ['W']
2025-09-15 09:34:43,731 - school_management - INFO - GET /api/students/classes/Grade 7 - 200 - 0.0257s
2025-09-15 13:59:37,889 - school_management - INFO - Generated student statistics including breakdown by grade and class
2025-09-15 13:59:37,903 - school_management - INFO - GET /api/students/statistics - 200 - 0.1317s
2025-09-15 13:59:37,942 - school_management - INFO - Generated student statistics including breakdown by grade and class
2025-09-15 13:59:37,961 - school_management - INFO - GET /api/students/statistics - 200 - 0.0393s
2025-09-15 14:09:53,013 - school_management - INFO - Fetched 1 students
2025-09-15 14:09:53,029 - school_management - INFO - GET /api/students/ - 200 - 0.3153s
2025-09-15 14:09:53,062 - school_management - INFO - Fetched 1 students
2025-09-15 14:09:53,072 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 14:09:53,081 - school_management - INFO - GET /api/students/ - 200 - 0.0353s
2025-09-15 14:09:53,097 - school_management - INFO - GET /api/students/grades - 200 - 0.3506s
2025-09-15 14:09:53,131 - school_management - INFO - Fetched 1 students
2025-09-15 14:09:53,145 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-15 14:09:53,159 - school_management - INFO - GET /api/students/ - 200 - 0.0384s
2025-09-15 14:09:53,164 - school_management - INFO - GET /api/students/grades - 200 - 0.0474s
2025-09-15 14:09:55,068 - school_management - INFO - Fetched 1 students
2025-09-15 14:09:55,125 - school_management - INFO - GET /api/students/ - 200 - 0.0617s
2025-09-15 14:09:55,178 - school_management - INFO - GET /api/sms/history - 200 - 0.0758s
2025-09-15 14:09:55,207 - school_management - INFO - Fetched 1 students
2025-09-15 14:09:55,239 - school_management - INFO - GET /api/students/ - 200 - 0.0369s
2025-09-15 14:09:55,265 - school_management - INFO - GET /api/sms/history - 200 - 0.0301s
2025-09-15 14:09:55,299 - school_management - INFO - Fetched 1 students
2025-09-15 14:09:55,318 - school_management - INFO - GET /api/students/ - 200 - 0.0230s
2025-09-15 14:09:55,333 - school_management - INFO - GET /api/sms/history - 200 - 0.0190s
2025-09-15 14:09:55,363 - school_management - INFO - Fetched 1 students
2025-09-15 14:09:55,376 - school_management - INFO - GET /api/students/ - 200 - 0.0268s
2025-09-15 14:09:58,520 - school_management - INFO - Fetched student: 67865744-06f1-4d68-bd85-81775e656bd2
2025-09-15 14:09:58,527 - school_management - INFO - GET /api/students/67865744-06f1-4d68-bd85-81775e656bd2 - 200 - 0.0148s
2025-09-15 14:10:37,512 - school_management - ERROR - SMS send failed to 27699977011 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x70b5bb4ed350>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-15 14:10:37,523 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x70b5bb4ed350>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-15 14:10:37,561 - school_management - ERROR - SMS send failed to 27798984117 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x70b5bb4ef1d0>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-15 14:10:37,572 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x70b5bb4ef1d0>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-15 14:10:37,646 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-15 14:10:37,654 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.4249s
2025-09-15 14:13:04,420 - school_management - ERROR - SMS send failed to 27699977011 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce1514e50>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-15 14:13:04,423 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce1514e50>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-15 14:13:04,438 - school_management - ERROR - SMS send failed to 27798984117 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce0401e50>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-15 14:13:04,441 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce0401e50>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-15 14:13:04,509 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-15 14:13:04,512 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.3096s
2025-09-15 14:13:33,110 - school_management - ERROR - SMS send failed to 27699977011 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce040ca90>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-15 14:13:33,113 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce040ca90>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-15 14:13:33,129 - school_management - ERROR - SMS send failed to 27798984117 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce040ea90>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-15 14:13:33,132 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce040ea90>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-15 14:13:33,178 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-15 14:13:33,183 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.2640s
2025-09-15 14:14:04,201 - school_management - ERROR - SMS send failed to 27699977011 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce040ebd0>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-15 14:14:04,204 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce040ebd0>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-15 14:14:04,222 - school_management - ERROR - SMS send failed to 27798984117 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce040ff50>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-15 14:14:04,226 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7b0ce040ff50>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-15 14:14:04,296 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-15 14:14:04,301 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.3167s
2025-09-16 03:16:15,010 - school_management - ERROR - SMS send failed to 27699977011 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7e3434c45a10>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-16 03:16:15,013 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7e3434c45a10>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-16 03:16:15,028 - school_management - ERROR - SMS send failed to 27798984117 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7e3434c47e10>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-16 03:16:15,030 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x7e3434c47e10>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-16 03:16:15,104 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 03:16:15,109 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.3988s
2025-09-16 03:18:26,932 - school_management - ERROR - SMS send failed to 27699977011 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x73ca98fbced0>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-16 03:18:26,939 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x73ca98fbced0>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-16 03:18:26,983 - school_management - ERROR - SMS send failed to 27798984117 for student 67865744-06f1-4d68-bd85-81775e656bd2. HTTPSConnectionPool(host='gateway.winsms.co.za', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x73ca98fbd090>: Failed to resolve 'gateway.winsms.co.za' ([Errno -2] Name or service not known)"))
2025-09-16 03:18:26,989 - school_management - ERROR - Full response: {'success': False, 'error': 'HTTPSConnectionPool(host=\'gateway.winsms.co.za\', port=443): Max retries exceeded with url: /api/rest/v6/SMS/send/SMS/send (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x73ca98fbd090>: Failed to resolve \'gateway.winsms.co.za\' ([Errno -2] Name or service not known)"))'}
2025-09-16 03:18:27,082 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 03:18:27,087 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.4890s
2025-09-16 03:19:49,708 - school_management - INFO - Application starting with WinSMS API URL: https://gateway.winsms.co.za/api/rest/v6/SMS/send
2025-09-16 05:31:39,175 - school_management - INFO - Successfully retrieved WinSMS credit balance: 6
2025-09-16 05:31:40,009 - school_management - ERROR - SMS send failed to 27669990771 for student test_student_id. Unknown error from WinSMS API
2025-09-16 05:31:40,126 - school_management - ERROR - Full response: {'success': False, 'status_code': 404, 'response': {'timeStamp': '20250916053139747', 'version': '1.0', 'statusCode': 404, 'errorMessage': 'The resource requested does not exist. Please verify the path, spelling, and capitalisation'}, 'url': 'https://api.winsms.co.za/api/rest/v1/sms/outbound'}
2025-09-16 05:31:40,320 - school_management - ERROR - Failed to log SMS result to database: 1 validation error for SMSLogCreate
student_id
  Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1 [type=uuid_parsing, input_value='test_student_id', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/uuid_parsing
2025-09-16 05:34:04,458 - school_management - INFO - Successfully retrieved WinSMS credit balance: 6
2025-09-16 05:34:04,569 - school_management - ERROR - SMS send failed to 27669990771 for student 00000000-0000-0000-0000-000000000001. Unknown error from WinSMS API
2025-09-16 05:34:04,570 - school_management - ERROR - Full response: {'success': False, 'status_code': 404, 'response': {'timeStamp': '20250916053404310', 'version': '1.0', 'statusCode': 404, 'errorMessage': 'The resource requested does not exist. Please verify the path, spelling, and capitalisation'}, 'url': 'https://api.winsms.co.za/api/rest/v1/sms/outbound'}
2025-09-16 05:34:04,624 - school_management - INFO - Mock DB: Added SMSLog
2025-09-16 05:37:41,521 - school_management - ERROR - Failed to retrieve WinSMS credit balance: [Errno 11001] getaddrinfo failed
2025-09-16 03:39:16,342 - school_management - ERROR - SMS send failed to 27699977011 for student 67865744-06f1-4d68-bd85-81775e656bd2. [Errno -2] Name or service not known
2025-09-16 03:39:16,346 - school_management - ERROR - Full response: {'success': False, 'error': '[Errno -2] Name or service not known'}
2025-09-16 03:39:16,362 - school_management - ERROR - SMS send failed to 27798984117 for student 67865744-06f1-4d68-bd85-81775e656bd2. [Errno -2] Name or service not known
2025-09-16 03:39:16,366 - school_management - ERROR - Full response: {'success': False, 'error': '[Errno -2] Name or service not known'}
2025-09-16 03:39:16,445 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 03:39:16,449 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.8123s
2025-09-16 03:50:13,321 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: Network error - [Errno -2] Name or service not known
2025-09-16 03:50:13,333 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: Network error - [Errno -2] Name or service not known
2025-09-16 03:50:13,423 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 03:50:13,432 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.6980s
2025-09-16 03:51:18,732 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: Network error - [Errno -2] Name or service not known
2025-09-16 03:51:18,758 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: Network error - [Errno -2] Name or service not known
2025-09-16 03:51:18,837 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 03:51:18,847 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.4272s
2025-09-16 03:51:36,199 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 03:51:36,206 - school_management - INFO - GET /api/students/grades - 200 - 0.0226s
2025-09-16 03:51:36,230 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 03:51:36,236 - school_management - INFO - GET /api/students/grades - 200 - 0.0149s
2025-09-16 03:51:41,019 - school_management - INFO - Fetched available classes for grade Grade 7: ['W']
2025-09-16 03:51:41,035 - school_management - INFO - GET /api/students/classes/Grade 7 - 200 - 0.0393s
2025-09-16 05:54:06,987 - school_management - ERROR - SMS send failed for student test-student-123 to 27821234567: HTTP 404: {"timeStamp":"20250916055406727","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:54:06,989 - school_management - ERROR - Failed to log SMS result to database: 1 validation error for SMSLogCreate
student_id
  Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1 [type=uuid_parsing, input_value='test-student-123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/uuid_parsing
2025-09-16 05:54:07,100 - school_management - INFO - WinSMS credit balance: 6
2025-09-16 05:54:07,199 - school_management - ERROR - Bulk SMS send failed: HTTP 404: {"timeStamp":"20250916055406947","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:54:07,201 - school_management - ERROR - Failed to log SMS result to database: When initializing mapper Mapper[SMSLog(sms_logs)], expression 'Student' failed to locate a name ('Student'). If this is a class name, consider adding this relationship() to the <class 'app.models.sms_log.SMSLog'> class after both dependent classes have been defined.
2025-09-16 05:54:07,202 - school_management - ERROR - Failed to log SMS result to database: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[SMSLog(sms_logs)]'. Original exception was: When initializing mapper Mapper[SMSLog(sms_logs)], expression 'Student' failed to locate a name ('Student'). If this is a class name, consider adding this relationship() to the <class 'app.models.sms_log.SMSLog'> class after both dependent classes have been defined.
2025-09-16 05:54:07,305 - school_management - ERROR - Failed to get message status for 12345678: HTTP 404: {"timeStamp":"20250916055407057","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:54:07,414 - school_management - ERROR - Failed to get multiple message statuses for IDs [12345678, 12345679]: HTTP 404: {"timeStamp":"20250916055407165","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:54:07,528 - school_management - ERROR - Failed to get incoming messages: HTTP 404: {"timeStamp":"20250916055407259","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:54:52,176 - school_management - ERROR - SMS send failed for student test-student-123 to 27821234567: HTTP 404: {"timeStamp":"20250916055451915","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:54:52,177 - school_management - ERROR - Failed to log SMS result to database: 1 validation error for SMSLogCreate
student_id
  Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1 [type=uuid_parsing, input_value='test-student-123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/uuid_parsing
2025-09-16 05:54:52,308 - school_management - ERROR - Failed to get credit balance: HTTP 404: {"timeStamp":"20250916055452056","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:54:52,441 - school_management - ERROR - Bulk SMS send failed: HTTP 404: {"timeStamp":"20250916055452181","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:54:52,445 - school_management - ERROR - Failed to log SMS result to database: When initializing mapper Mapper[SMSLog(sms_logs)], expression 'Student' failed to locate a name ('Student'). If this is a class name, consider adding this relationship() to the <class 'app.models.sms_log.SMSLog'> class after both dependent classes have been defined.
2025-09-16 05:54:52,447 - school_management - ERROR - Failed to log SMS result to database: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[SMSLog(sms_logs)]'. Original exception was: When initializing mapper Mapper[SMSLog(sms_logs)], expression 'Student' failed to locate a name ('Student'). If this is a class name, consider adding this relationship() to the <class 'app.models.sms_log.SMSLog'> class after both dependent classes have been defined.
2025-09-16 05:54:52,560 - school_management - ERROR - Failed to get message status for 12345678: HTTP 404: {"timeStamp":"20250916055452307","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:54:52,702 - school_management - ERROR - Failed to get multiple message statuses for IDs [12345678, 12345679]: HTTP 404: {"timeStamp":"20250916055452448","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:54:52,884 - school_management - ERROR - Failed to get incoming messages: HTTP 404: {"timeStamp":"20250916055452635","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:55:35,688 - school_management - ERROR - SMS send failed for student test-student-123 to 27821234567: HTTP 404: {"timeStamp":"20250916055535414","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:55:35,689 - school_management - ERROR - Failed to log SMS result to database: 1 validation error for SMSLogCreate
student_id
  Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1 [type=uuid_parsing, input_value='test-student-123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/uuid_parsing
2025-09-16 05:55:35,815 - school_management - INFO - WinSMS credit balance: 6
2025-09-16 05:55:35,978 - school_management - ERROR - Bulk SMS send failed: HTTP 404: {"timeStamp":"20250916055535713","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:55:35,985 - school_management - ERROR - Failed to log SMS result to database: When initializing mapper Mapper[SMSLog(sms_logs)], expression 'Student' failed to locate a name ('Student'). If this is a class name, consider adding this relationship() to the <class 'app.models.sms_log.SMSLog'> class after both dependent classes have been defined.
2025-09-16 05:55:35,989 - school_management - ERROR - Failed to log SMS result to database: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[SMSLog(sms_logs)]'. Original exception was: When initializing mapper Mapper[SMSLog(sms_logs)], expression 'Student' failed to locate a name ('Student'). If this is a class name, consider adding this relationship() to the <class 'app.models.sms_log.SMSLog'> class after both dependent classes have been defined.
2025-09-16 05:55:36,132 - school_management - ERROR - Failed to get message status for 12345678: HTTP 404: {"timeStamp":"20250916055535866","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:55:36,269 - school_management - ERROR - Failed to get multiple message statuses for IDs [12345678, 12345679]: HTTP 404: {"timeStamp":"20250916055536010","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 05:55:36,412 - school_management - ERROR - Failed to get incoming messages: HTTP 404: {"timeStamp":"20250916055536147","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 03:59:44,001 - school_management - INFO - Fetched 1 students
2025-09-16 03:59:44,090 - school_management - INFO - GET /api/students/ - 200 - 0.1264s
2025-09-16 03:59:44,397 - school_management - INFO - Fetched 1 students
2025-09-16 03:59:44,532 - school_management - INFO - GET /api/students/ - 200 - 0.1404s
2025-09-16 03:59:44,678 - school_management - INFO - Fetched 1 students
2025-09-16 03:59:44,701 - school_management - INFO - GET /api/sms/history - 200 - 0.6374s
2025-09-16 03:59:44,829 - school_management - INFO - GET /api/students/ - 200 - 0.1612s
2025-09-16 03:59:44,968 - school_management - INFO - GET /api/sms/history - 200 - 0.0172s
2025-09-16 03:59:45,043 - school_management - INFO - Fetched 1 students
2025-09-16 03:59:45,162 - school_management - INFO - GET /api/students/ - 200 - 0.1358s
2025-09-16 03:59:45,327 - school_management - INFO - GET /api/sms/history - 200 - 0.0087s
2025-09-16 03:59:56,937 - school_management - INFO - Fetched student: 67865744-06f1-4d68-bd85-81775e656bd2
2025-09-16 03:59:56,944 - school_management - INFO - GET /api/students/67865744-06f1-4d68-bd85-81775e656bd2 - 200 - 0.0267s
2025-09-16 04:00:06,307 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: Network error - [Errno -2] Name or service not known
2025-09-16 04:00:06,412 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: Network error - [Errno -2] Name or service not known
2025-09-16 04:00:06,537 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 04:00:06,608 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.7436s
2025-09-16 04:02:54,855 - school_management - INFO - GET /docs - 200 - 0.0015s
2025-09-16 04:02:56,018 - school_management - INFO - GET /openapi.json - 200 - 0.0467s
2025-09-16 06:03:32,336 - school_management - INFO - SMSService initialized with Base URL: https://api.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 06:03:32,567 - school_management - ERROR - SMS send failed for student test-student-123 to 27821234567: HTTP 404: {"timeStamp":"20250916060332314","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 06:03:32,568 - school_management - ERROR - Failed to log SMS result to database: 1 validation error for SMSLogCreate
student_id
  Input should be a valid UUID, invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found `t` at 1 [type=uuid_parsing, input_value='test-student-123', input_type=str]
    For further information visit https://errors.pydantic.dev/2.11/v/uuid_parsing
2025-09-16 06:03:32,760 - school_management - INFO - WinSMS credit balance: 6
2025-09-16 06:03:32,859 - school_management - ERROR - Bulk SMS send failed: HTTP 404: {"timeStamp":"20250916060332595","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 06:03:32,862 - school_management - ERROR - Failed to log SMS result to database: When initializing mapper Mapper[SMSLog(sms_logs)], expression 'Student' failed to locate a name ('Student'). If this is a class name, consider adding this relationship() to the <class 'app.models.sms_log.SMSLog'> class after both dependent classes have been defined.
2025-09-16 06:03:32,866 - school_management - ERROR - Failed to log SMS result to database: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'Mapper[SMSLog(sms_logs)]'. Original exception was: When initializing mapper Mapper[SMSLog(sms_logs)], expression 'Student' failed to locate a name ('Student'). If this is a class name, consider adding this relationship() to the <class 'app.models.sms_log.SMSLog'> class after both dependent classes have been defined.
2025-09-16 06:03:32,965 - school_management - ERROR - Failed to get message status for 12345678: HTTP 404: {"timeStamp":"20250916060332705","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 06:03:33,071 - school_management - ERROR - Failed to get multiple message statuses for IDs [12345678, 12345679]: HTTP 404: {"timeStamp":"20250916060332813","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 06:03:33,175 - school_management - ERROR - Failed to get incoming messages: HTTP 404: {"timeStamp":"20250916060332923","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 04:14:56,077 - school_management - INFO - SMSService initialized with Base URL: https://gateway.winsms.co.za/api/rest/v6 and API Key (first 5 chars): D1CA7*****
2025-09-16 04:14:56,344 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: Network error - [Errno -2] Name or service not known
2025-09-16 04:14:56,354 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: Network error - [Errno -2] Name or service not known
2025-09-16 04:14:56,433 - school_management - ERROR - Transaction failed for fee notification SMS: (sqlalchemy.dialects.postgresql.asyncpg.ProgrammingError) <class 'asyncpg.exceptions.UndefinedColumnError'>: column "api_message_id" of relation "sms_logs" does not exist
[SQL: INSERT INTO sms_logs (student_id, recipient_phone, message_content, status, error_detail, api_message_id, is_bulk, template_name) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::BOOLEAN, $8::VARCHAR) RETURNING sms_logs.id, sms_logs.sent_at]
[parameters: (UUID('67865744-06f1-4d68-bd85-81775e656bd2'), '27699977011', "Dear Parent, Sitwala MJ's school fees are paid.", 'failed', 'Network error: [Errno -2] Name or service not known', None, False, None)]
(Background on this error at: https://sqlalche.me/e/20/f405)
2025-09-16 04:14:56,439 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.4381s
2025-09-16 04:25:12,960 - school_management - INFO - SMSService initialized with Base URL: https://api.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 04:25:13,031 - school_management - INFO - Successfully resolved api.winsms.co.za to 129.232.191.82
2025-09-16 04:25:13,109 - school_management - ERROR - Unexpected error while sending SMS for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: 'SMSService' object has no attribute 'base_url'
2025-09-16 04:25:13,127 - school_management - ERROR - Unexpected error while sending SMS for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: 'SMSService' object has no attribute 'base_url'
2025-09-16 04:25:13,205 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 04:25:13,260 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.4598s
2025-09-16 04:26:40,273 - school_management - INFO - GET /api/sms/history - 200 - 0.0458s
2025-09-16 04:26:52,326 - school_management - INFO - GET /api/sms/history - 200 - 0.0082s
2025-09-16 04:27:03,960 - school_management - INFO - GET /api/sms/history - 200 - 0.0519s
2025-09-16 04:27:20,953 - school_management - INFO - SMSService initialized with Base URL: https://api.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 04:27:20,967 - school_management - INFO - Successfully resolved api.winsms.co.za to 129.232.191.82
2025-09-16 04:27:21,310 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: HTTP 404: {"timeStamp":"20250916062721043","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 04:27:21,435 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: HTTP 404: {"timeStamp":"20250916062721168","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 04:27:21,576 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 04:27:21,579 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.7266s
2025-09-16 04:27:47,595 - school_management - INFO - SMSService initialized with Base URL: https://api.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 04:27:47,690 - school_management - INFO - Successfully resolved api.winsms.co.za to 129.232.191.82
2025-09-16 04:27:48,030 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: HTTP 404: {"timeStamp":"20250916062747762","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 04:27:48,180 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: HTTP 404: {"timeStamp":"20250916062747903","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 04:27:48,247 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 04:27:48,265 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.7549s
2025-09-16 04:32:17,928 - school_management - INFO - SMSService initialized with Base URL: https://api.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 04:32:18,069 - school_management - INFO - Successfully resolved api.winsms.co.za to 129.232.191.82
2025-09-16 04:32:18,709 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: HTTP 404: {"timeStamp":"20250916063218444","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 04:32:18,841 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: HTTP 404: {"timeStamp":"20250916063218570","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 04:32:18,997 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 04:32:19,075 - school_management - INFO - POST /api/sms/fee-notification - 500 - 1.6839s
2025-09-16 04:41:58,112 - school_management - INFO - SMSService initialized with Base URL: https://www.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 04:41:58,182 - school_management - INFO - Successfully resolved www.winsms.co.za to 172.67.73.85
2025-09-16 04:41:58,550 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: HTTP 404: {"timeStamp":"20250916064158279","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 04:41:58,682 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: HTTP 404: {"timeStamp":"20250916064158404","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 04:41:58,762 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 04:41:58,784 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.7980s
2025-09-16 04:50:11,885 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 04:50:11,898 - school_management - INFO - GET /api/students/grades - 200 - 0.0430s
2025-09-16 04:50:11,926 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 04:50:11,939 - school_management - INFO - GET /api/students/grades - 200 - 0.0170s
2025-09-16 04:50:13,120 - school_management - INFO - Fetched 1 students
2025-09-16 04:50:13,130 - school_management - INFO - GET /api/students/ - 200 - 0.0289s
2025-09-16 04:50:13,141 - school_management - INFO - Fetched 1 students
2025-09-16 04:50:13,149 - school_management - INFO - GET /api/students/ - 200 - 0.0116s
2025-09-16 04:50:14,984 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 04:50:15,021 - school_management - INFO - GET /api/students/grades - 200 - 0.0398s
2025-09-16 04:50:15,044 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 04:50:15,057 - school_management - INFO - GET /api/students/grades - 200 - 0.0168s
2025-09-16 04:50:16,235 - school_management - INFO - Fetched 1 students
2025-09-16 04:50:16,253 - school_management - INFO - GET /api/students/ - 200 - 0.0232s
2025-09-16 04:50:16,270 - school_management - INFO - Fetched 1 students
2025-09-16 04:50:16,274 - school_management - INFO - GET /api/students/ - 200 - 0.0090s
2025-09-16 04:50:17,536 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 04:50:17,541 - school_management - INFO - GET /api/students/grades - 200 - 0.0086s
2025-09-16 04:50:17,576 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 04:50:17,584 - school_management - INFO - GET /api/students/grades - 200 - 0.0120s
2025-09-16 04:50:25,868 - school_management - INFO - Fetched 1 students
2025-09-16 04:50:25,881 - school_management - INFO - GET /api/students/ - 200 - 0.0178s
2025-09-16 04:50:25,897 - school_management - INFO - Fetched 1 students
2025-09-16 04:50:25,924 - school_management - INFO - GET /api/students/ - 200 - 0.0310s
2025-09-16 04:50:26,953 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 04:50:26,962 - school_management - INFO - GET /api/students/grades - 200 - 0.0308s
2025-09-16 04:50:26,979 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 04:50:26,984 - school_management - INFO - GET /api/students/grades - 200 - 0.0095s
2025-09-16 05:22:57,162 - school_management - INFO - GET /docs - 200 - 0.0012s
2025-09-16 05:22:57,836 - school_management - INFO - GET /openapi.json - 200 - 0.1372s
2025-09-16 05:32:19,546 - school_management - INFO - Successfully imported student from CSV: Maidi Blessing O
2025-09-16 05:32:19,589 - school_management - INFO - Successfully imported student from CSV: Maloka Kglemo E
2025-09-16 05:32:19,595 - school_management - INFO - Successfully imported student from CSV: Masemola Tshepo
2025-09-16 05:32:19,604 - school_management - INFO - Successfully imported student from CSV: Mashita Kgalalelo
2025-09-16 05:32:19,616 - school_management - INFO - Successfully imported student from CSV: Hlongwane Neoentle G
2025-09-16 05:32:19,629 - school_management - INFO - Successfully imported student from CSV: Kekana Naledi M
2025-09-16 05:32:19,636 - school_management - INFO - Successfully imported student from CSV: Matlala Ntando
2025-09-16 05:32:19,645 - school_management - INFO - Successfully imported student from CSV: Kekana Oreneile T
2025-09-16 05:32:19,651 - school_management - INFO - Successfully imported student from CSV: Kganyo Rorisang P
2025-09-16 05:32:19,659 - school_management - INFO - Successfully imported student from CSV: Khoza Tlotlo N
2025-09-16 05:32:19,667 - school_management - INFO - Successfully imported student from CSV: Mabunda Didintle B
2025-09-16 05:32:19,674 - school_management - INFO - Successfully imported student from CSV: Mahlonoko Rorisang A
2025-09-16 05:32:19,678 - school_management - WARNING - Validation error for row 14 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,680 - school_management - WARNING - Validation error for row 15 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,690 - school_management - INFO - Successfully imported student from CSV: Monyiloti Elizabeth B
2025-09-16 05:32:19,695 - school_management - WARNING - Validation error for row 17 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,699 - school_management - WARNING - Validation error for row 18 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,705 - school_management - WARNING - Validation error for row 19 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,707 - school_management - WARNING - Validation error for row 20 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,711 - school_management - WARNING - Validation error for row 21 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,713 - school_management - WARNING - Validation error for row 22 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,714 - school_management - WARNING - Validation error for row 23 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,717 - school_management - WARNING - Validation error for row 24 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,719 - school_management - WARNING - Validation error for row 25 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,725 - school_management - WARNING - Validation error for row 26 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,728 - school_management - WARNING - Validation error for row 27 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,731 - school_management - WARNING - Validation error for row 28 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,733 - school_management - WARNING - Validation error for row 29 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,738 - school_management - WARNING - Validation error for row 30 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,744 - school_management - WARNING - Validation error for row 31 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,748 - school_management - WARNING - Validation error for row 32 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,751 - school_management - WARNING - Validation error for row 33 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,758 - school_management - WARNING - Validation error for row 34 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,762 - school_management - WARNING - Validation error for row 35 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,773 - school_management - WARNING - Validation error for row 36 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,778 - school_management - WARNING - Validation error for row 37 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,781 - school_management - WARNING - Validation error for row 38 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,785 - school_management - WARNING - Validation error for row 39 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,791 - school_management - WARNING - Validation error for row 40 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,796 - school_management - WARNING - Validation error for row 41 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,799 - school_management - WARNING - Validation error for row 42 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,803 - school_management - WARNING - Validation error for row 43 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,807 - school_management - WARNING - Validation error for row 44 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,811 - school_management - WARNING - Validation error for row 45 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,815 - school_management - WARNING - Validation error for row 46 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,818 - school_management - WARNING - Validation error for row 47 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:19,827 - school_management - INFO - Successfully imported student from CSV: BUSY BEESCHOOL
2025-09-16 05:32:19,867 - school_management - INFO - CSV import complete. Successful: 14, Failed: 33
2025-09-16 05:32:19,869 - school_management - INFO - CSV import process finished for file 'students_data_missing_class_letter.csv'. Summary: {'total_rows_processed': 47, 'successful_imports': [{'row': 2, 'name': 'Maidi Blessing O', 'status': 'success'}, {'row': 3, 'name': 'Maloka Kglemo E', 'status': 'success'}, {'row': 4, 'name': 'Masemola Tshepo', 'status': 'success'}, {'row': 5, 'name': 'Mashita Kgalalelo', 'status': 'success'}, {'row': 6, 'name': 'Hlongwane Neoentle G', 'status': 'success'}, {'row': 7, 'name': 'Kekana Naledi M', 'status': 'success'}, {'row': 8, 'name': 'Matlala Ntando', 'status': 'success'}, {'row': 9, 'name': 'Kekana Oreneile T', 'status': 'success'}, {'row': 10, 'name': 'Kganyo Rorisang P', 'status': 'success'}, {'row': 11, 'name': 'Khoza Tlotlo N', 'status': 'success'}, {'row': 12, 'name': 'Mabunda Didintle B', 'status': 'success'}, {'row': 13, 'name': 'Mahlonoko Rorisang A', 'status': 'success'}, {'row': 16, 'name': 'Monyiloti Elizabeth B', 'status': 'success'}, {'row': 48, 'name': 'BUSY BEESCHOOL', 'status': 'success'}], 'failed_imports': [{'row': 14, 'data': {'name': 'Phalane Lebogang GJ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27731080032', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'd6d87735-c30f-466b-a724-0a6124884c28', 'created_at': '2025-09-04T10:10:21.877559Z', 'updated_at': '2025-09-04T10:10:21.877559Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 15, 'data': {'name': 'Ntlhane Didinte L', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27649463590', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'd5392353-d868-46e7-9231-9134d436e50b', 'created_at': '2025-09-04T10:08:55.042089Z', 'updated_at': '2025-09-04T10:12:12.558083Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 17, 'data': {'name': 'Phalane  Mmapula j', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27845500709', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '6e460e8b-df34-4193-8acd-be141112cf40', 'created_at': '2025-09-04T10:13:48.881254Z', 'updated_at': '2025-09-04T10:13:48.881254Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 18, 'data': {'name': 'Seemise Otlotleng H', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27660884166', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'ef1fe5e8-0cdd-4f2c-b774-78458c91036d', 'created_at': '2025-09-04T10:16:03.370201Z', 'updated_at': '2025-09-04T10:16:03.370201Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 19, 'data': {'name': 'Simonse  Enelocin J', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27729540118', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '145c83bc-6bbd-491c-9953-c4d1386d99d3', 'created_at': '2025-09-04T10:17:28.522075Z', 'updated_at': '2025-09-04T10:17:28.522075Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 20, 'data': {'name': 'Tseke Gobonwe P', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27823592379', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '3cde7a71-d600-463c-80f7-ba0a75dbf4ea', 'created_at': '2025-09-04T10:18:43.821813Z', 'updated_at': '2025-09-04T10:18:43.821813Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 21, 'data': {'name': 'Tshabalala Calvin S', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27826923322', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'c4940b8f-2ae9-477d-a994-31b4b324c862', 'created_at': '2025-09-04T10:20:03.081365Z', 'updated_at': '2025-09-04T10:20:03.081365Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 22, 'data': {'name': 'Tshukudu Tshegofatso', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27820891423', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '5ec9d230-3e95-4af4-95ca-5022efc8768b', 'created_at': '2025-09-04T10:21:11.596005Z', 'updated_at': '2025-09-04T10:21:11.596005Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 23, 'data': {'name': 'Tsita Katlego M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27657089423', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '5641cd6a-8baf-432b-8466-85564b1d24f7', 'created_at': '2025-09-04T10:22:08.916392Z', 'updated_at': '2025-09-04T10:22:08.916392Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 24, 'data': {'name': 'Vilakazi Ofentse ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27612801844', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '342f832c-8274-48f9-b51e-3a0b6fac718c', 'created_at': '2025-09-04T10:23:08.855619Z', 'updated_at': '2025-09-04T10:23:08.855619Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 25, 'data': {'name': 'Baaitjies kamogelo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27763703418', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '09e4a172-ab35-4f77-9961-d8d3e3f0c618', 'created_at': '2025-09-08T10:03:13.804487Z', 'updated_at': '2025-09-08T10:03:13.804487Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 26, 'data': {'name': 'Baloyi Basetsana L', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27648492542', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '03b89365-da4f-4e3e-9d8e-3479c5aedded', 'created_at': '2025-09-08T10:04:20.472479Z', 'updated_at': '2025-09-08T10:04:20.472479Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 27, 'data': {'name': 'Jelu Oluthando ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27662919372', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '4ae86fbd-544e-457a-b974-3aebde4b268d', 'created_at': '2025-09-08T10:05:30.240910Z', 'updated_at': '2025-09-08T10:05:30.240910Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 28, 'data': {'name': 'Kekana Ontshiametse A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27678073417', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '63b540bc-a8ec-4364-8063-9fd92f03b3c5', 'created_at': '2025-09-08T10:08:38.810587Z', 'updated_at': '2025-09-08T10:08:38.810587Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 29, 'data': {'name': 'Kekana Tshegofatso O H', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27680002829', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'ae866c4d-29ac-4f61-ab06-2a66d1d60c92', 'created_at': '2025-09-08T10:09:54.620566Z', 'updated_at': '2025-09-08T10:09:54.620566Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 30, 'data': {'name': 'Maubane Reabetswe R E', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27834367751', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'e27d59fb-3948-4fa3-935a-8e7931107e06', 'created_at': '2025-09-08T10:11:36.544285Z', 'updated_at': '2025-09-08T10:11:36.544285Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 31, 'data': {'name': 'Mahlangu Lesedi B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27780563681', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '6a5a8fd7-9a45-4de8-8e93-ed6254b19f97', 'created_at': '2025-09-08T10:12:24.615513Z', 'updated_at': '2025-09-08T10:12:24.615513Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 32, 'data': {'name': 'Makhubela Amukelane O', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27647092791', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '2aa6b0ae-2a07-4b51-b025-af176609009a', 'created_at': '2025-09-08T10:13:09.711091Z', 'updated_at': '2025-09-08T10:13:09.711091Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 33, 'data': {'name': 'Makwela Lethabo R', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27125239120', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'c4315b65-a32c-46b9-91a2-aa2fb86ed3fd', 'created_at': '2025-09-08T10:14:21.753455Z', 'updated_at': '2025-09-08T10:14:21.753455Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 34, 'data': {'name': 'Malungani Onthatile A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27763162008', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '03867889-29fb-411b-83cb-88930ca66bae', 'created_at': '2025-09-08T10:15:05.479959Z', 'updated_at': '2025-09-08T10:15:05.479959Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 35, 'data': {'name': 'Mangwathe Onkabetse', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27799251939', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '2a19513c-c0fa-4ac5-906f-c251ad079b93', 'created_at': '2025-09-08T10:17:36.279474Z', 'updated_at': '2025-09-08T10:17:36.279474Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 36, 'data': {'name': 'Maphalaphatwa Wavhuthu A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27722264629', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '238a3f38-67dd-4352-a6a4-70e493e803c5', 'created_at': '2025-09-08T10:18:37.950978Z', 'updated_at': '2025-09-08T10:18:37.950978Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 37, 'data': {'name': 'Mashiane Neoentle R', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27712335782', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '6ed2b06a-c95a-43a4-a82c-73685975b9c7', 'created_at': '2025-09-08T10:19:32.920799Z', 'updated_at': '2025-09-08T10:19:32.920799Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 38, 'data': {'name': 'Masotla Ofentse', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27822142342', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'd6aec764-5356-4719-bde5-c3bdc5ea825f', 'created_at': '2025-09-08T10:20:14.010864Z', 'updated_at': '2025-09-08T10:20:14.010864Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 39, 'data': {'name': 'Mnisi Thatego', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27792472467', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '348bb925-1ceb-47ca-8699-6378463cc239', 'created_at': '2025-09-08T10:20:57.129571Z', 'updated_at': '2025-09-08T10:20:57.129571Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 40, 'data': {'name': 'Mokhonwana Bontle', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27818683741', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '1cc21c1e-092e-46ee-953a-4b38252e73c8', 'created_at': '2025-09-08T10:22:14.560939Z', 'updated_at': '2025-09-08T10:22:14.560939Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 41, 'data': {'name': 'Msibi Kgatoentle K M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27793074395', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'ecfa1387-8983-4601-bae0-bcfd22c69399', 'created_at': '2025-09-08T10:23:27.342295Z', 'updated_at': '2025-09-08T10:23:27.342295Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 42, 'data': {'name': 'Mushi Keletso ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27764891895', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'c9f095aa-9afd-41a9-8dbf-606d7c04bf95', 'created_at': '2025-09-08T10:24:19.529070Z', 'updated_at': '2025-09-08T10:24:19.529070Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 43, 'data': {'name': 'Ncube Sizwe A.', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27832899769', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '594867b3-2dc9-4373-8b2d-97e7f6e01e13', 'created_at': '2025-09-08T10:25:22.907873Z', 'updated_at': '2025-09-08T10:25:22.907873Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 44, 'data': {'name': 'Nkateko Nkadimeng M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27719119705', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'cf684b09-4fac-43e1-bf3e-306000678923', 'created_at': '2025-09-08T10:26:15.069373Z', 'updated_at': '2025-09-08T10:26:15.069373Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 45, 'data': {'name': 'Ringane Rebotile A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27839948090', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'f89537a0-90a4-4da4-b6a0-7c3c14424b3c', 'created_at': '2025-09-08T10:27:51.840835Z', 'updated_at': '2025-09-08T10:27:51.840835Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 46, 'data': {'name': 'Setsiba Letlotlo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27720821022', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '8c20e900-7d4e-48e3-921d-8e04c47f854a', 'created_at': '2025-09-08T10:28:27.319485Z', 'updated_at': '2025-09-08T10:28:27.319485Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 47, 'data': {'name': 'Thulare Rorisang', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27763659285', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '79412026-b152-4b25-99bd-d77871d75ec6', 'created_at': '2025-09-08T10:29:06.549924Z', 'updated_at': '2025-09-08T10:29:06.549924Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}]}
2025-09-16 05:32:59,174 - school_management - ERROR - Database error for row 2 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Maidi Blessing O, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('52469cd1-6da3-449c-9647-57bbf33495e4'), 'Maidi Blessing O', 'Grade 7', 'W', '27738055282', '27607540650', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,191 - school_management - ERROR - Database error for row 3 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Maloka Kglemo E, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('3b2b2135-facf-4f60-9bbc-4ffa4644e071'), 'Maloka Kglemo E', 'Grade 7', 'W', '27826660311', '27827332257', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,221 - school_management - ERROR - Database error for row 4 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Masemola Tshepo, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('aaeb0c4d-8f47-4007-960d-696b9e33b996'), 'Masemola Tshepo', 'Grade 7', 'W', '27726856334', '27815593415', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,247 - school_management - ERROR - Database error for row 5 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Mashita Kgalalelo, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('8019dca9-75ba-45ee-93aa-908956d2907b'), 'Mashita Kgalalelo', 'Grade 7', 'W', '27606129947', '27665356951', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,265 - school_management - ERROR - Database error for row 6 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Hlongwane Neoentle G, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('afb514ae-3625-44d2-9983-2933f1015df6'), 'Hlongwane Neoentle G', 'Grade 7', 'W', '27724996000', '27837676954', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,283 - school_management - ERROR - Database error for row 7 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Kekana Naledi M, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('0bdb1bfc-0831-443e-b02e-9792305d3f36'), 'Kekana Naledi M', 'Grade 7', 'W', '27723295708', '27606870076', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,303 - school_management - ERROR - Database error for row 8 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Matlala Ntando, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('2bf0a98e-1606-4b5a-8f45-9e46851268f2'), 'Matlala Ntando', 'Grade 7', 'W', '27728444515', '27793425591', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,327 - school_management - ERROR - Database error for row 9 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Kekana Oreneile T, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('3e0ca0a4-00ba-40a4-9d7f-bc598366e4de'), 'Kekana Oreneile T', 'Grade 7', 'W', '27723295708', '27606870076', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,344 - school_management - ERROR - Database error for row 10 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Kganyo Rorisang P, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('f1d8442c-b07a-441e-9159-418dce5f07f8'), 'Kganyo Rorisang P', 'Grade 7', 'W', '27796094888', '27729382571', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,361 - school_management - ERROR - Database error for row 11 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Khoza Tlotlo N, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('9df650eb-2c30-4ef5-b735-e2a4d3a4a72b'), 'Khoza Tlotlo N', 'Grade 7', 'W', '27787506438', '27835294948', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,377 - school_management - ERROR - Database error for row 12 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Mabunda Didintle B, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('02a4f980-22dc-4832-9010-985187b435b4'), 'Mabunda Didintle B', 'Grade 7', 'W', '27727888077', '27762856986', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,413 - school_management - ERROR - Database error for row 13 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Mahlonoko Rorisang A, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('7fa385fe-e110-475a-ae4a-a14435c4c77e'), 'Mahlonoko Rorisang A', 'Grade 7', 'W', '27639660017', '27826520173', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,427 - school_management - WARNING - Validation error for row 14 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,430 - school_management - WARNING - Validation error for row 15 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,444 - school_management - ERROR - Database error for row 16 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Monyiloti Elizabeth B, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('5fae0c86-506d-4d50-90e6-6564fcfc095d'), 'Monyiloti Elizabeth B', 'Grade 7', 'W', '27825197504', '27798874746', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,457 - school_management - WARNING - Validation error for row 17 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,460 - school_management - WARNING - Validation error for row 18 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,466 - school_management - WARNING - Validation error for row 19 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,483 - school_management - WARNING - Validation error for row 20 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,492 - school_management - WARNING - Validation error for row 21 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,498 - school_management - WARNING - Validation error for row 22 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,501 - school_management - WARNING - Validation error for row 23 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,509 - school_management - WARNING - Validation error for row 24 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,514 - school_management - WARNING - Validation error for row 25 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,518 - school_management - WARNING - Validation error for row 26 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,526 - school_management - WARNING - Validation error for row 27 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,534 - school_management - WARNING - Validation error for row 28 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,547 - school_management - WARNING - Validation error for row 29 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,556 - school_management - WARNING - Validation error for row 30 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,559 - school_management - WARNING - Validation error for row 31 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,563 - school_management - WARNING - Validation error for row 32 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,568 - school_management - WARNING - Validation error for row 33 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,575 - school_management - WARNING - Validation error for row 34 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,578 - school_management - WARNING - Validation error for row 35 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,581 - school_management - WARNING - Validation error for row 36 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,584 - school_management - WARNING - Validation error for row 37 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,588 - school_management - WARNING - Validation error for row 38 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,594 - school_management - WARNING - Validation error for row 39 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,596 - school_management - WARNING - Validation error for row 40 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,601 - school_management - WARNING - Validation error for row 41 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,607 - school_management - WARNING - Validation error for row 42 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,611 - school_management - WARNING - Validation error for row 43 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,614 - school_management - WARNING - Validation error for row 44 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,618 - school_management - WARNING - Validation error for row 45 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,624 - school_management - WARNING - Validation error for row 46 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,628 - school_management - WARNING - Validation error for row 47 in CSV: [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]
2025-09-16 05:32:59,649 - school_management - ERROR - Database error for row 48 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(BUSY BEESCHOOL, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('c466391f-4bfc-46cb-90a7-a300356d270f'), 'BUSY BEESCHOOL', 'Grade 7', 'W', '27828058088', '27846760610', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:32:59,662 - school_management - INFO - CSV import complete. Successful: 0, Failed: 47
2025-09-16 05:32:59,666 - school_management - INFO - CSV import process finished for file 'students_data_missing_class_letter.csv'. Summary: {'total_rows_processed': 47, 'successful_imports': [], 'failed_imports': [{'row': 2, 'data': {'name': 'Maidi Blessing O', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27738055282', 'parent2_phone': '+27607540650', 'fee_status': 'unpaid', 'id': 'cbd700d2-5e44-438c-b81f-104d425e6a24', 'created_at': '2025-09-03T23:52:26.575045Z', 'updated_at': '2025-09-03T23:52:26.575045Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Maidi Blessing O, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'52469cd1-6da3-449c-9647-57bbf33495e4\'), \'Maidi Blessing O\', \'Grade 7\', \'W\', \'27738055282\', \'27607540650\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 3, 'data': {'name': 'Maloka Kglemo E', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27826660311', 'parent2_phone': '+27827332257', 'fee_status': 'unpaid', 'id': '862fcf54-e769-44e7-ad55-66ef3ea48b66', 'created_at': '2025-09-03T23:53:14.012464Z', 'updated_at': '2025-09-03T23:53:14.012464Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Maloka Kglemo E, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'3b2b2135-facf-4f60-9bbc-4ffa4644e071\'), \'Maloka Kglemo E\', \'Grade 7\', \'W\', \'27826660311\', \'27827332257\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 4, 'data': {'name': 'Masemola Tshepo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27726856334', 'parent2_phone': '+27815593415', 'fee_status': 'unpaid', 'id': 'ad2fed1b-77b1-4244-9436-708d6ffbae00', 'created_at': '2025-09-03T23:54:21.527415Z', 'updated_at': '2025-09-03T23:54:21.527415Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Masemola Tshepo, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'aaeb0c4d-8f47-4007-960d-696b9e33b996\'), \'Masemola Tshepo\', \'Grade 7\', \'W\', \'27726856334\', \'27815593415\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 5, 'data': {'name': 'Mashita Kgalalelo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27606129947', 'parent2_phone': '+27665356951', 'fee_status': 'unpaid', 'id': 'b1dabbae-ca72-425a-b0fc-db237a2eadf6', 'created_at': '2025-09-03T23:57:02.177872Z', 'updated_at': '2025-09-03T23:57:02.177872Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Mashita Kgalalelo, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'8019dca9-75ba-45ee-93aa-908956d2907b\'), \'Mashita Kgalalelo\', \'Grade 7\', \'W\', \'27606129947\', \'27665356951\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 6, 'data': {'name': 'Hlongwane Neoentle G', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27724996000', 'parent2_phone': '+27837676954', 'fee_status': 'paid', 'id': 'd04f50a9-ea88-412c-a1d7-7afcf973acb2', 'created_at': '2025-09-03T23:41:25.918811Z', 'updated_at': '2025-09-04T00:03:05.610007Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Hlongwane Neoentle G, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'afb514ae-3625-44d2-9983-2933f1015df6\'), \'Hlongwane Neoentle G\', \'Grade 7\', \'W\', \'27724996000\', \'27837676954\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 7, 'data': {'name': 'Kekana Naledi M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27723295708', 'parent2_phone': '+27606870076', 'fee_status': 'paid', 'id': '588e2fc5-03bc-4a7d-8b08-93d213a7aa76', 'created_at': '2025-09-03T23:44:09.105072Z', 'updated_at': '2025-09-04T00:03:31.375754Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Kekana Naledi M, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'0bdb1bfc-0831-443e-b02e-9792305d3f36\'), \'Kekana Naledi M\', \'Grade 7\', \'W\', \'27723295708\', \'27606870076\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 8, 'data': {'name': 'Matlala Ntando', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27728444515', 'parent2_phone': '+27793425591', 'fee_status': 'paid', 'id': '708c5e4e-fa1a-49ff-9a1e-79b6ef38596a', 'created_at': '2025-09-03T23:58:47.284805Z', 'updated_at': '2025-09-04T00:04:25.040693Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Matlala Ntando, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'2bf0a98e-1606-4b5a-8f45-9e46851268f2\'), \'Matlala Ntando\', \'Grade 7\', \'W\', \'27728444515\', \'27793425591\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 9, 'data': {'name': 'Kekana Oreneile T', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27723295708', 'parent2_phone': '+27606870076', 'fee_status': 'paid', 'id': '2e5f1f6a-a4c1-4f97-a1f9-7e3e171f24b7', 'created_at': '2025-09-03T23:45:46.339869Z', 'updated_at': '2025-09-04T00:05:34.699087Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Kekana Oreneile T, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'3e0ca0a4-00ba-40a4-9d7f-bc598366e4de\'), \'Kekana Oreneile T\', \'Grade 7\', \'W\', \'27723295708\', \'27606870076\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 10, 'data': {'name': 'Kganyo Rorisang P', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27796094888', 'parent2_phone': '+27729382571', 'fee_status': 'paid', 'id': '55db2bff-3825-4479-8668-16c8e8890309', 'created_at': '2025-09-03T23:47:03.079856Z', 'updated_at': '2025-09-04T00:05:35.305802Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Kganyo Rorisang P, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'f1d8442c-b07a-441e-9159-418dce5f07f8\'), \'Kganyo Rorisang P\', \'Grade 7\', \'W\', \'27796094888\', \'27729382571\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 11, 'data': {'name': 'Khoza Tlotlo N', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27787506438', 'parent2_phone': '+27835294948', 'fee_status': 'paid', 'id': 'd276c2c5-f6dc-4140-af05-f0f5e2aabf7e', 'created_at': '2025-09-03T23:48:06.385198Z', 'updated_at': '2025-09-04T00:05:35.911760Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Khoza Tlotlo N, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'9df650eb-2c30-4ef5-b735-e2a4d3a4a72b\'), \'Khoza Tlotlo N\', \'Grade 7\', \'W\', \'27787506438\', \'27835294948\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 12, 'data': {'name': 'Mabunda Didintle B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27727888077', 'parent2_phone': '+27762856986', 'fee_status': 'paid', 'id': 'df82d395-8fa1-4947-92c0-559e32e59a6b', 'created_at': '2025-09-03T23:49:15.447557Z', 'updated_at': '2025-09-04T08:15:11.970096Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Mabunda Didintle B, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'02a4f980-22dc-4832-9010-985187b435b4\'), \'Mabunda Didintle B\', \'Grade 7\', \'W\', \'27727888077\', \'27762856986\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 13, 'data': {'name': 'Mahlonoko Rorisang A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27639660017', 'parent2_phone': '+27826520173', 'fee_status': 'paid', 'id': '6fe4a927-a965-4ece-8b96-550b61a386b0', 'created_at': '2025-09-03T23:51:07.467069Z', 'updated_at': '2025-09-04T08:17:10.606687Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Mahlonoko Rorisang A, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'7fa385fe-e110-475a-ae4a-a14435c4c77e\'), \'Mahlonoko Rorisang A\', \'Grade 7\', \'W\', \'27639660017\', \'27826520173\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 14, 'data': {'name': 'Phalane Lebogang GJ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27731080032', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'd6d87735-c30f-466b-a724-0a6124884c28', 'created_at': '2025-09-04T10:10:21.877559Z', 'updated_at': '2025-09-04T10:10:21.877559Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 15, 'data': {'name': 'Ntlhane Didinte L', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27649463590', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'd5392353-d868-46e7-9231-9134d436e50b', 'created_at': '2025-09-04T10:08:55.042089Z', 'updated_at': '2025-09-04T10:12:12.558083Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 16, 'data': {'name': 'Monyiloti Elizabeth B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27825197504', 'parent2_phone': '+27798874746', 'fee_status': 'unpaid', 'id': '049de030-4878-44b4-b93a-57801aaeef9f', 'created_at': '2025-09-04T10:05:35.762920Z', 'updated_at': '2025-09-04T10:12:31.016890Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Monyiloti Elizabeth B, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'5fae0c86-506d-4d50-90e6-6564fcfc095d\'), \'Monyiloti Elizabeth B\', \'Grade 7\', \'W\', \'27825197504\', \'27798874746\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 17, 'data': {'name': 'Phalane  Mmapula j', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27845500709', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '6e460e8b-df34-4193-8acd-be141112cf40', 'created_at': '2025-09-04T10:13:48.881254Z', 'updated_at': '2025-09-04T10:13:48.881254Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 18, 'data': {'name': 'Seemise Otlotleng H', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27660884166', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'ef1fe5e8-0cdd-4f2c-b774-78458c91036d', 'created_at': '2025-09-04T10:16:03.370201Z', 'updated_at': '2025-09-04T10:16:03.370201Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 19, 'data': {'name': 'Simonse  Enelocin J', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27729540118', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '145c83bc-6bbd-491c-9953-c4d1386d99d3', 'created_at': '2025-09-04T10:17:28.522075Z', 'updated_at': '2025-09-04T10:17:28.522075Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 20, 'data': {'name': 'Tseke Gobonwe P', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27823592379', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '3cde7a71-d600-463c-80f7-ba0a75dbf4ea', 'created_at': '2025-09-04T10:18:43.821813Z', 'updated_at': '2025-09-04T10:18:43.821813Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 21, 'data': {'name': 'Tshabalala Calvin S', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27826923322', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'c4940b8f-2ae9-477d-a994-31b4b324c862', 'created_at': '2025-09-04T10:20:03.081365Z', 'updated_at': '2025-09-04T10:20:03.081365Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 22, 'data': {'name': 'Tshukudu Tshegofatso', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27820891423', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '5ec9d230-3e95-4af4-95ca-5022efc8768b', 'created_at': '2025-09-04T10:21:11.596005Z', 'updated_at': '2025-09-04T10:21:11.596005Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 23, 'data': {'name': 'Tsita Katlego M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27657089423', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '5641cd6a-8baf-432b-8466-85564b1d24f7', 'created_at': '2025-09-04T10:22:08.916392Z', 'updated_at': '2025-09-04T10:22:08.916392Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 24, 'data': {'name': 'Vilakazi Ofentse ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27612801844', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '342f832c-8274-48f9-b51e-3a0b6fac718c', 'created_at': '2025-09-04T10:23:08.855619Z', 'updated_at': '2025-09-04T10:23:08.855619Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 25, 'data': {'name': 'Baaitjies kamogelo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27763703418', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '09e4a172-ab35-4f77-9961-d8d3e3f0c618', 'created_at': '2025-09-08T10:03:13.804487Z', 'updated_at': '2025-09-08T10:03:13.804487Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 26, 'data': {'name': 'Baloyi Basetsana L', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27648492542', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '03b89365-da4f-4e3e-9d8e-3479c5aedded', 'created_at': '2025-09-08T10:04:20.472479Z', 'updated_at': '2025-09-08T10:04:20.472479Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 27, 'data': {'name': 'Jelu Oluthando ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27662919372', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '4ae86fbd-544e-457a-b974-3aebde4b268d', 'created_at': '2025-09-08T10:05:30.240910Z', 'updated_at': '2025-09-08T10:05:30.240910Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 28, 'data': {'name': 'Kekana Ontshiametse A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27678073417', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '63b540bc-a8ec-4364-8063-9fd92f03b3c5', 'created_at': '2025-09-08T10:08:38.810587Z', 'updated_at': '2025-09-08T10:08:38.810587Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 29, 'data': {'name': 'Kekana Tshegofatso O H', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27680002829', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'ae866c4d-29ac-4f61-ab06-2a66d1d60c92', 'created_at': '2025-09-08T10:09:54.620566Z', 'updated_at': '2025-09-08T10:09:54.620566Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 30, 'data': {'name': 'Maubane Reabetswe R E', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27834367751', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'e27d59fb-3948-4fa3-935a-8e7931107e06', 'created_at': '2025-09-08T10:11:36.544285Z', 'updated_at': '2025-09-08T10:11:36.544285Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 31, 'data': {'name': 'Mahlangu Lesedi B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27780563681', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '6a5a8fd7-9a45-4de8-8e93-ed6254b19f97', 'created_at': '2025-09-08T10:12:24.615513Z', 'updated_at': '2025-09-08T10:12:24.615513Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 32, 'data': {'name': 'Makhubela Amukelane O', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27647092791', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '2aa6b0ae-2a07-4b51-b025-af176609009a', 'created_at': '2025-09-08T10:13:09.711091Z', 'updated_at': '2025-09-08T10:13:09.711091Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 33, 'data': {'name': 'Makwela Lethabo R', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27125239120', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'c4315b65-a32c-46b9-91a2-aa2fb86ed3fd', 'created_at': '2025-09-08T10:14:21.753455Z', 'updated_at': '2025-09-08T10:14:21.753455Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 34, 'data': {'name': 'Malungani Onthatile A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27763162008', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '03867889-29fb-411b-83cb-88930ca66bae', 'created_at': '2025-09-08T10:15:05.479959Z', 'updated_at': '2025-09-08T10:15:05.479959Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 35, 'data': {'name': 'Mangwathe Onkabetse', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27799251939', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '2a19513c-c0fa-4ac5-906f-c251ad079b93', 'created_at': '2025-09-08T10:17:36.279474Z', 'updated_at': '2025-09-08T10:17:36.279474Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 36, 'data': {'name': 'Maphalaphatwa Wavhuthu A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27722264629', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '238a3f38-67dd-4352-a6a4-70e493e803c5', 'created_at': '2025-09-08T10:18:37.950978Z', 'updated_at': '2025-09-08T10:18:37.950978Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 37, 'data': {'name': 'Mashiane Neoentle R', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27712335782', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '6ed2b06a-c95a-43a4-a82c-73685975b9c7', 'created_at': '2025-09-08T10:19:32.920799Z', 'updated_at': '2025-09-08T10:19:32.920799Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 38, 'data': {'name': 'Masotla Ofentse', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27822142342', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'd6aec764-5356-4719-bde5-c3bdc5ea825f', 'created_at': '2025-09-08T10:20:14.010864Z', 'updated_at': '2025-09-08T10:20:14.010864Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 39, 'data': {'name': 'Mnisi Thatego', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27792472467', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '348bb925-1ceb-47ca-8699-6378463cc239', 'created_at': '2025-09-08T10:20:57.129571Z', 'updated_at': '2025-09-08T10:20:57.129571Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 40, 'data': {'name': 'Mokhonwana Bontle', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27818683741', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '1cc21c1e-092e-46ee-953a-4b38252e73c8', 'created_at': '2025-09-08T10:22:14.560939Z', 'updated_at': '2025-09-08T10:22:14.560939Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 41, 'data': {'name': 'Msibi Kgatoentle K M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27793074395', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'ecfa1387-8983-4601-bae0-bcfd22c69399', 'created_at': '2025-09-08T10:23:27.342295Z', 'updated_at': '2025-09-08T10:23:27.342295Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 42, 'data': {'name': 'Mushi Keletso ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27764891895', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'c9f095aa-9afd-41a9-8dbf-606d7c04bf95', 'created_at': '2025-09-08T10:24:19.529070Z', 'updated_at': '2025-09-08T10:24:19.529070Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 43, 'data': {'name': 'Ncube Sizwe A.', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27832899769', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '594867b3-2dc9-4373-8b2d-97e7f6e01e13', 'created_at': '2025-09-08T10:25:22.907873Z', 'updated_at': '2025-09-08T10:25:22.907873Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 44, 'data': {'name': 'Nkateko Nkadimeng M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27719119705', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'cf684b09-4fac-43e1-bf3e-306000678923', 'created_at': '2025-09-08T10:26:15.069373Z', 'updated_at': '2025-09-08T10:26:15.069373Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 45, 'data': {'name': 'Ringane Rebotile A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27839948090', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'f89537a0-90a4-4da4-b6a0-7c3c14424b3c', 'created_at': '2025-09-08T10:27:51.840835Z', 'updated_at': '2025-09-08T10:27:51.840835Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 46, 'data': {'name': 'Setsiba Letlotlo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27720821022', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '8c20e900-7d4e-48e3-921d-8e04c47f854a', 'created_at': '2025-09-08T10:28:27.319485Z', 'updated_at': '2025-09-08T10:28:27.319485Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 47, 'data': {'name': 'Thulare Rorisang', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27763659285', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '79412026-b152-4b25-99bd-d77871d75ec6', 'created_at': '2025-09-08T10:29:06.549924Z', 'updated_at': '2025-09-08T10:29:06.549924Z'}, 'errors': [{'type': 'value_error', 'loc': ('parent2_phone',), 'msg': 'Value error, parent2_phone validation failed: Phone number cannot be empty.', 'input': 'null', 'ctx': {'error': ValueError('parent2_phone validation failed: Phone number cannot be empty.')}, 'url': 'https://errors.pydantic.dev/2.11/v/value_error'}]}, {'row': 48, 'data': {'name': 'BUSY BEESCHOOL', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27828058088', 'parent2_phone': '+27846760610', 'fee_status': 'unpaid', 'id': 'e931f7cc-b83a-4863-96ee-d56ed8af3552', 'created_at': '2025-09-10T10:10:29.526675Z', 'updated_at': '2025-09-10T10:10:29.526675Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(BUSY BEESCHOOL, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'c466391f-4bfc-46cb-90a7-a300356d270f\'), \'BUSY BEESCHOOL\', \'Grade 7\', \'W\', \'27828058088\', \'27846760610\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}]}
2025-09-16 05:39:18,849 - school_management - INFO - GET /docs - 200 - 0.0009s
2025-09-16 05:39:20,400 - school_management - INFO - GET /openapi.json - 200 - 0.1316s
2025-09-16 05:39:34,731 - school_management - ERROR - Database error for row 2 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Maidi Blessing O, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('b31ece22-f03b-4ff6-aa57-0e0619d756cc'), 'Maidi Blessing O', 'Grade 7', 'W', '27738055282', '27607540650', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,749 - school_management - ERROR - Database error for row 3 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Maloka Kglemo E, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('6c2142af-1f13-4ecc-954b-9aebfadd0895'), 'Maloka Kglemo E', 'Grade 7', 'W', '27826660311', '27827332257', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,767 - school_management - ERROR - Database error for row 4 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Masemola Tshepo, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('c7c198e6-9f26-4565-9785-743c6935a667'), 'Masemola Tshepo', 'Grade 7', 'W', '27726856334', '27815593415', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,781 - school_management - ERROR - Database error for row 5 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Mashita Kgalalelo, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('d0ec5bcb-40a6-48a8-8fcf-9f31e4d52569'), 'Mashita Kgalalelo', 'Grade 7', 'W', '27606129947', '27665356951', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,804 - school_management - ERROR - Database error for row 6 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Hlongwane Neoentle G, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('10bb587f-3b1c-4314-ac0d-3240e4561581'), 'Hlongwane Neoentle G', 'Grade 7', 'W', '27724996000', '27837676954', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,815 - school_management - ERROR - Database error for row 7 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Kekana Naledi M, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('e94bccfb-4e89-4c4e-9518-f71f5cc3c3ae'), 'Kekana Naledi M', 'Grade 7', 'W', '27723295708', '27606870076', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,826 - school_management - ERROR - Database error for row 8 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Matlala Ntando, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('63d215e2-3751-4ab8-b53d-4367f95ba823'), 'Matlala Ntando', 'Grade 7', 'W', '27728444515', '27793425591', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,841 - school_management - ERROR - Database error for row 9 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Kekana Oreneile T, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('c75beb0c-eecf-4820-8515-0b0dd1b144b8'), 'Kekana Oreneile T', 'Grade 7', 'W', '27723295708', '27606870076', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,853 - school_management - ERROR - Database error for row 10 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Kganyo Rorisang P, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('0b396cc0-ee5d-4277-8b31-004daf15904c'), 'Kganyo Rorisang P', 'Grade 7', 'W', '27796094888', '27729382571', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,865 - school_management - ERROR - Database error for row 11 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Khoza Tlotlo N, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('9c98810f-a826-43b6-b215-aaeb23906f54'), 'Khoza Tlotlo N', 'Grade 7', 'W', '27787506438', '27835294948', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,878 - school_management - ERROR - Database error for row 12 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Mabunda Didintle B, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('75e5c584-ca43-428e-9702-76cb6e2e8f11'), 'Mabunda Didintle B', 'Grade 7', 'W', '27727888077', '27762856986', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,892 - school_management - ERROR - Database error for row 13 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Mahlonoko Rorisang A, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('0cd19ee6-cf88-40d1-a720-884ff853772e'), 'Mahlonoko Rorisang A', 'Grade 7', 'W', '27639660017', '27826520173', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,908 - school_management - INFO - Successfully imported student from CSV: Phalane Lebogang GJ
2025-09-16 05:39:34,917 - school_management - INFO - Successfully imported student from CSV: Ntlhane Didinte L
2025-09-16 05:39:34,928 - school_management - ERROR - Database error for row 16 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Monyiloti Elizabeth B, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('33262a46-6488-4c11-9327-6aaab4f49468'), 'Monyiloti Elizabeth B', 'Grade 7', 'W', '27825197504', '27798874746', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:34,940 - school_management - INFO - Successfully imported student from CSV: Phalane  Mmapula j
2025-09-16 05:39:34,955 - school_management - INFO - Successfully imported student from CSV: Seemise Otlotleng H
2025-09-16 05:39:34,970 - school_management - INFO - Successfully imported student from CSV: Simonse  Enelocin J
2025-09-16 05:39:34,983 - school_management - INFO - Successfully imported student from CSV: Tseke Gobonwe P
2025-09-16 05:39:34,988 - school_management - INFO - Successfully imported student from CSV: Tshabalala Calvin S
2025-09-16 05:39:34,999 - school_management - INFO - Successfully imported student from CSV: Tshukudu Tshegofatso
2025-09-16 05:39:35,005 - school_management - INFO - Successfully imported student from CSV: Tsita Katlego M
2025-09-16 05:39:35,014 - school_management - INFO - Successfully imported student from CSV: Vilakazi Ofentse
2025-09-16 05:39:35,019 - school_management - INFO - Successfully imported student from CSV: Baaitjies kamogelo
2025-09-16 05:39:35,030 - school_management - INFO - Successfully imported student from CSV: Baloyi Basetsana L
2025-09-16 05:39:35,035 - school_management - INFO - Successfully imported student from CSV: Jelu Oluthando
2025-09-16 05:39:35,041 - school_management - INFO - Successfully imported student from CSV: Kekana Ontshiametse A
2025-09-16 05:39:35,049 - school_management - INFO - Successfully imported student from CSV: Kekana Tshegofatso O H
2025-09-16 05:39:35,057 - school_management - INFO - Successfully imported student from CSV: Maubane Reabetswe R E
2025-09-16 05:39:35,065 - school_management - INFO - Successfully imported student from CSV: Mahlangu Lesedi B
2025-09-16 05:39:35,074 - school_management - INFO - Successfully imported student from CSV: Makhubela Amukelane O
2025-09-16 05:39:35,086 - school_management - INFO - Successfully imported student from CSV: Makwela Lethabo R
2025-09-16 05:39:35,096 - school_management - INFO - Successfully imported student from CSV: Malungani Onthatile A
2025-09-16 05:39:35,103 - school_management - INFO - Successfully imported student from CSV: Mangwathe Onkabetse
2025-09-16 05:39:35,115 - school_management - INFO - Successfully imported student from CSV: Maphalaphatwa Wavhuthu A
2025-09-16 05:39:35,122 - school_management - INFO - Successfully imported student from CSV: Mashiane Neoentle R
2025-09-16 05:39:35,130 - school_management - INFO - Successfully imported student from CSV: Masotla Ofentse
2025-09-16 05:39:35,136 - school_management - INFO - Successfully imported student from CSV: Mnisi Thatego
2025-09-16 05:39:35,146 - school_management - INFO - Successfully imported student from CSV: Mokhonwana Bontle
2025-09-16 05:39:35,152 - school_management - INFO - Successfully imported student from CSV: Msibi Kgatoentle K M
2025-09-16 05:39:35,159 - school_management - INFO - Successfully imported student from CSV: Mushi Keletso
2025-09-16 05:39:35,167 - school_management - INFO - Successfully imported student from CSV: Ncube Sizwe A.
2025-09-16 05:39:35,179 - school_management - INFO - Successfully imported student from CSV: Nkateko Nkadimeng M
2025-09-16 05:39:35,185 - school_management - INFO - Successfully imported student from CSV: Ringane Rebotile A
2025-09-16 05:39:35,192 - school_management - INFO - Successfully imported student from CSV: Setsiba Letlotlo
2025-09-16 05:39:35,202 - school_management - INFO - Successfully imported student from CSV: Thulare Rorisang
2025-09-16 05:39:35,214 - school_management - ERROR - Database error for row 48 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(BUSY BEESCHOOL, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('819e4156-54fe-4b0c-8b80-75159d726791'), 'BUSY BEESCHOOL', 'Grade 7', 'W', '27828058088', '27846760610', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:39:35,219 - school_management - INFO - CSV import complete. Successful: 33, Failed: 14
2025-09-16 05:39:35,221 - school_management - INFO - CSV import process finished for file 'students_data_missing_class_letter.csv'. Summary: {'total_rows_processed': 47, 'successful_imports': [{'row': 14, 'name': 'Phalane Lebogang GJ', 'status': 'success'}, {'row': 15, 'name': 'Ntlhane Didinte L', 'status': 'success'}, {'row': 17, 'name': 'Phalane  Mmapula j', 'status': 'success'}, {'row': 18, 'name': 'Seemise Otlotleng H', 'status': 'success'}, {'row': 19, 'name': 'Simonse  Enelocin J', 'status': 'success'}, {'row': 20, 'name': 'Tseke Gobonwe P', 'status': 'success'}, {'row': 21, 'name': 'Tshabalala Calvin S', 'status': 'success'}, {'row': 22, 'name': 'Tshukudu Tshegofatso', 'status': 'success'}, {'row': 23, 'name': 'Tsita Katlego M', 'status': 'success'}, {'row': 24, 'name': 'Vilakazi Ofentse', 'status': 'success'}, {'row': 25, 'name': 'Baaitjies kamogelo', 'status': 'success'}, {'row': 26, 'name': 'Baloyi Basetsana L', 'status': 'success'}, {'row': 27, 'name': 'Jelu Oluthando', 'status': 'success'}, {'row': 28, 'name': 'Kekana Ontshiametse A', 'status': 'success'}, {'row': 29, 'name': 'Kekana Tshegofatso O H', 'status': 'success'}, {'row': 30, 'name': 'Maubane Reabetswe R E', 'status': 'success'}, {'row': 31, 'name': 'Mahlangu Lesedi B', 'status': 'success'}, {'row': 32, 'name': 'Makhubela Amukelane O', 'status': 'success'}, {'row': 33, 'name': 'Makwela Lethabo R', 'status': 'success'}, {'row': 34, 'name': 'Malungani Onthatile A', 'status': 'success'}, {'row': 35, 'name': 'Mangwathe Onkabetse', 'status': 'success'}, {'row': 36, 'name': 'Maphalaphatwa Wavhuthu A', 'status': 'success'}, {'row': 37, 'name': 'Mashiane Neoentle R', 'status': 'success'}, {'row': 38, 'name': 'Masotla Ofentse', 'status': 'success'}, {'row': 39, 'name': 'Mnisi Thatego', 'status': 'success'}, {'row': 40, 'name': 'Mokhonwana Bontle', 'status': 'success'}, {'row': 41, 'name': 'Msibi Kgatoentle K M', 'status': 'success'}, {'row': 42, 'name': 'Mushi Keletso', 'status': 'success'}, {'row': 43, 'name': 'Ncube Sizwe A.', 'status': 'success'}, {'row': 44, 'name': 'Nkateko Nkadimeng M', 'status': 'success'}, {'row': 45, 'name': 'Ringane Rebotile A', 'status': 'success'}, {'row': 46, 'name': 'Setsiba Letlotlo', 'status': 'success'}, {'row': 47, 'name': 'Thulare Rorisang', 'status': 'success'}], 'failed_imports': [{'row': 2, 'data': {'name': 'Maidi Blessing O', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27738055282', 'parent2_phone': '+27607540650', 'fee_status': 'unpaid', 'id': 'cbd700d2-5e44-438c-b81f-104d425e6a24', 'created_at': '2025-09-03T23:52:26.575045Z', 'updated_at': '2025-09-03T23:52:26.575045Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Maidi Blessing O, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'b31ece22-f03b-4ff6-aa57-0e0619d756cc\'), \'Maidi Blessing O\', \'Grade 7\', \'W\', \'27738055282\', \'27607540650\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 3, 'data': {'name': 'Maloka Kglemo E', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27826660311', 'parent2_phone': '+27827332257', 'fee_status': 'unpaid', 'id': '862fcf54-e769-44e7-ad55-66ef3ea48b66', 'created_at': '2025-09-03T23:53:14.012464Z', 'updated_at': '2025-09-03T23:53:14.012464Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Maloka Kglemo E, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'6c2142af-1f13-4ecc-954b-9aebfadd0895\'), \'Maloka Kglemo E\', \'Grade 7\', \'W\', \'27826660311\', \'27827332257\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 4, 'data': {'name': 'Masemola Tshepo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27726856334', 'parent2_phone': '+27815593415', 'fee_status': 'unpaid', 'id': 'ad2fed1b-77b1-4244-9436-708d6ffbae00', 'created_at': '2025-09-03T23:54:21.527415Z', 'updated_at': '2025-09-03T23:54:21.527415Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Masemola Tshepo, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'c7c198e6-9f26-4565-9785-743c6935a667\'), \'Masemola Tshepo\', \'Grade 7\', \'W\', \'27726856334\', \'27815593415\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 5, 'data': {'name': 'Mashita Kgalalelo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27606129947', 'parent2_phone': '+27665356951', 'fee_status': 'unpaid', 'id': 'b1dabbae-ca72-425a-b0fc-db237a2eadf6', 'created_at': '2025-09-03T23:57:02.177872Z', 'updated_at': '2025-09-03T23:57:02.177872Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Mashita Kgalalelo, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'d0ec5bcb-40a6-48a8-8fcf-9f31e4d52569\'), \'Mashita Kgalalelo\', \'Grade 7\', \'W\', \'27606129947\', \'27665356951\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 6, 'data': {'name': 'Hlongwane Neoentle G', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27724996000', 'parent2_phone': '+27837676954', 'fee_status': 'paid', 'id': 'd04f50a9-ea88-412c-a1d7-7afcf973acb2', 'created_at': '2025-09-03T23:41:25.918811Z', 'updated_at': '2025-09-04T00:03:05.610007Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Hlongwane Neoentle G, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'10bb587f-3b1c-4314-ac0d-3240e4561581\'), \'Hlongwane Neoentle G\', \'Grade 7\', \'W\', \'27724996000\', \'27837676954\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 7, 'data': {'name': 'Kekana Naledi M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27723295708', 'parent2_phone': '+27606870076', 'fee_status': 'paid', 'id': '588e2fc5-03bc-4a7d-8b08-93d213a7aa76', 'created_at': '2025-09-03T23:44:09.105072Z', 'updated_at': '2025-09-04T00:03:31.375754Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Kekana Naledi M, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'e94bccfb-4e89-4c4e-9518-f71f5cc3c3ae\'), \'Kekana Naledi M\', \'Grade 7\', \'W\', \'27723295708\', \'27606870076\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 8, 'data': {'name': 'Matlala Ntando', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27728444515', 'parent2_phone': '+27793425591', 'fee_status': 'paid', 'id': '708c5e4e-fa1a-49ff-9a1e-79b6ef38596a', 'created_at': '2025-09-03T23:58:47.284805Z', 'updated_at': '2025-09-04T00:04:25.040693Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Matlala Ntando, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'63d215e2-3751-4ab8-b53d-4367f95ba823\'), \'Matlala Ntando\', \'Grade 7\', \'W\', \'27728444515\', \'27793425591\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 9, 'data': {'name': 'Kekana Oreneile T', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27723295708', 'parent2_phone': '+27606870076', 'fee_status': 'paid', 'id': '2e5f1f6a-a4c1-4f97-a1f9-7e3e171f24b7', 'created_at': '2025-09-03T23:45:46.339869Z', 'updated_at': '2025-09-04T00:05:34.699087Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Kekana Oreneile T, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'c75beb0c-eecf-4820-8515-0b0dd1b144b8\'), \'Kekana Oreneile T\', \'Grade 7\', \'W\', \'27723295708\', \'27606870076\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 10, 'data': {'name': 'Kganyo Rorisang P', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27796094888', 'parent2_phone': '+27729382571', 'fee_status': 'paid', 'id': '55db2bff-3825-4479-8668-16c8e8890309', 'created_at': '2025-09-03T23:47:03.079856Z', 'updated_at': '2025-09-04T00:05:35.305802Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Kganyo Rorisang P, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'0b396cc0-ee5d-4277-8b31-004daf15904c\'), \'Kganyo Rorisang P\', \'Grade 7\', \'W\', \'27796094888\', \'27729382571\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 11, 'data': {'name': 'Khoza Tlotlo N', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27787506438', 'parent2_phone': '+27835294948', 'fee_status': 'paid', 'id': 'd276c2c5-f6dc-4140-af05-f0f5e2aabf7e', 'created_at': '2025-09-03T23:48:06.385198Z', 'updated_at': '2025-09-04T00:05:35.911760Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Khoza Tlotlo N, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'9c98810f-a826-43b6-b215-aaeb23906f54\'), \'Khoza Tlotlo N\', \'Grade 7\', \'W\', \'27787506438\', \'27835294948\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 12, 'data': {'name': 'Mabunda Didintle B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27727888077', 'parent2_phone': '+27762856986', 'fee_status': 'paid', 'id': 'df82d395-8fa1-4947-92c0-559e32e59a6b', 'created_at': '2025-09-03T23:49:15.447557Z', 'updated_at': '2025-09-04T08:15:11.970096Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Mabunda Didintle B, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'75e5c584-ca43-428e-9702-76cb6e2e8f11\'), \'Mabunda Didintle B\', \'Grade 7\', \'W\', \'27727888077\', \'27762856986\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 13, 'data': {'name': 'Mahlonoko Rorisang A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27639660017', 'parent2_phone': '+27826520173', 'fee_status': 'paid', 'id': '6fe4a927-a965-4ece-8b96-550b61a386b0', 'created_at': '2025-09-03T23:51:07.467069Z', 'updated_at': '2025-09-04T08:17:10.606687Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Mahlonoko Rorisang A, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'0cd19ee6-cf88-40d1-a720-884ff853772e\'), \'Mahlonoko Rorisang A\', \'Grade 7\', \'W\', \'27639660017\', \'27826520173\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 16, 'data': {'name': 'Monyiloti Elizabeth B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27825197504', 'parent2_phone': '+27798874746', 'fee_status': 'unpaid', 'id': '049de030-4878-44b4-b93a-57801aaeef9f', 'created_at': '2025-09-04T10:05:35.762920Z', 'updated_at': '2025-09-04T10:12:31.016890Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Monyiloti Elizabeth B, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'33262a46-6488-4c11-9327-6aaab4f49468\'), \'Monyiloti Elizabeth B\', \'Grade 7\', \'W\', \'27825197504\', \'27798874746\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 48, 'data': {'name': 'BUSY BEESCHOOL', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27828058088', 'parent2_phone': '+27846760610', 'fee_status': 'unpaid', 'id': 'e931f7cc-b83a-4863-96ee-d56ed8af3552', 'created_at': '2025-09-10T10:10:29.526675Z', 'updated_at': '2025-09-10T10:10:29.526675Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(BUSY BEESCHOOL, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'819e4156-54fe-4b0c-8b80-75159d726791\'), \'BUSY BEESCHOOL\', \'Grade 7\', \'W\', \'27828058088\', \'27846760610\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}]}
2025-09-16 05:39:35,230 - school_management - INFO - POST /api/students/import-csv - 200 - 0.5631s
2025-09-16 05:40:08,945 - school_management - ERROR - Database error for row 2 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Maidi Blessing O, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('dca0e124-98ac-4367-a81d-1ad20aa3d65a'), 'Maidi Blessing O', 'Grade 7', 'W', '27738055282', '27607540650', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:08,965 - school_management - ERROR - Database error for row 3 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Maloka Kglemo E, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('b12d666a-98ee-46d2-a378-6266b9407f2e'), 'Maloka Kglemo E', 'Grade 7', 'W', '27826660311', '27827332257', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,009 - school_management - ERROR - Database error for row 4 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Masemola Tshepo, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('d3c925ed-5a2a-45f3-990c-daec5f4c04bb'), 'Masemola Tshepo', 'Grade 7', 'W', '27726856334', '27815593415', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,049 - school_management - ERROR - Database error for row 5 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Mashita Kgalalelo, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('c5f89e36-c3ef-4b42-a832-0f25535fb619'), 'Mashita Kgalalelo', 'Grade 7', 'W', '27606129947', '27665356951', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,083 - school_management - ERROR - Database error for row 6 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Hlongwane Neoentle G, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('c56b793e-5682-4e46-921a-19d7372507b8'), 'Hlongwane Neoentle G', 'Grade 7', 'W', '27724996000', '27837676954', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,134 - school_management - ERROR - Database error for row 7 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Kekana Naledi M, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('7ab111c3-ba36-45b5-b2bf-a208f7873d3d'), 'Kekana Naledi M', 'Grade 7', 'W', '27723295708', '27606870076', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,171 - school_management - ERROR - Database error for row 8 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Matlala Ntando, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('4efff881-7b02-4563-8d35-aa3cb5c0e892'), 'Matlala Ntando', 'Grade 7', 'W', '27728444515', '27793425591', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,203 - school_management - ERROR - Database error for row 9 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Kekana Oreneile T, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('c6a181ee-7fcc-4961-b8ff-01e60113f6ec'), 'Kekana Oreneile T', 'Grade 7', 'W', '27723295708', '27606870076', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,235 - school_management - ERROR - Database error for row 10 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Kganyo Rorisang P, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('42a142f0-0600-4bc8-a4e6-5c6254939547'), 'Kganyo Rorisang P', 'Grade 7', 'W', '27796094888', '27729382571', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,286 - school_management - ERROR - Database error for row 11 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Khoza Tlotlo N, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('798552f3-a208-4508-a74b-ec4fbfa5a704'), 'Khoza Tlotlo N', 'Grade 7', 'W', '27787506438', '27835294948', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,319 - school_management - ERROR - Database error for row 12 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Mabunda Didintle B, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('225e355c-b9a7-4043-9c43-7f2c34c423f3'), 'Mabunda Didintle B', 'Grade 7', 'W', '27727888077', '27762856986', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,352 - school_management - ERROR - Database error for row 13 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Mahlonoko Rorisang A, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('86301274-6a85-40ae-84fe-6dc5a7e8e33f'), 'Mahlonoko Rorisang A', 'Grade 7', 'W', '27639660017', '27826520173', 'paid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,384 - school_management - INFO - Successfully imported student from CSV: Phalane Lebogang GJ
2025-09-16 05:40:09,402 - school_management - INFO - Successfully imported student from CSV: Ntlhane Didinte L
2025-09-16 05:40:09,452 - school_management - ERROR - Database error for row 16 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(Monyiloti Elizabeth B, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('e55bc0fa-9f39-4b87-9a14-6b6f5c770df9'), 'Monyiloti Elizabeth B', 'Grade 7', 'W', '27825197504', '27798874746', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:09,484 - school_management - INFO - Successfully imported student from CSV: Phalane  Mmapula j
2025-09-16 05:40:09,529 - school_management - INFO - Successfully imported student from CSV: Seemise Otlotleng H
2025-09-16 05:40:09,559 - school_management - INFO - Successfully imported student from CSV: Simonse  Enelocin J
2025-09-16 05:40:09,580 - school_management - INFO - Successfully imported student from CSV: Tseke Gobonwe P
2025-09-16 05:40:09,599 - school_management - INFO - Successfully imported student from CSV: Tshabalala Calvin S
2025-09-16 05:40:09,669 - school_management - INFO - Successfully imported student from CSV: Tshukudu Tshegofatso
2025-09-16 05:40:09,698 - school_management - INFO - Successfully imported student from CSV: Tsita Katlego M
2025-09-16 05:40:09,736 - school_management - INFO - Successfully imported student from CSV: Vilakazi Ofentse
2025-09-16 05:40:09,764 - school_management - INFO - Successfully imported student from CSV: Baaitjies kamogelo
2025-09-16 05:40:09,781 - school_management - INFO - Successfully imported student from CSV: Baloyi Basetsana L
2025-09-16 05:40:09,856 - school_management - INFO - Successfully imported student from CSV: Jelu Oluthando
2025-09-16 05:40:09,901 - school_management - INFO - Successfully imported student from CSV: Kekana Ontshiametse A
2025-09-16 05:40:09,921 - school_management - INFO - Successfully imported student from CSV: Kekana Tshegofatso O H
2025-09-16 05:40:09,949 - school_management - INFO - Successfully imported student from CSV: Maubane Reabetswe R E
2025-09-16 05:40:09,995 - school_management - INFO - Successfully imported student from CSV: Mahlangu Lesedi B
2025-09-16 05:40:10,019 - school_management - INFO - Successfully imported student from CSV: Makhubela Amukelane O
2025-09-16 05:40:10,086 - school_management - INFO - Successfully imported student from CSV: Makwela Lethabo R
2025-09-16 05:40:10,117 - school_management - INFO - Successfully imported student from CSV: Malungani Onthatile A
2025-09-16 05:40:10,155 - school_management - INFO - Successfully imported student from CSV: Mangwathe Onkabetse
2025-09-16 05:40:10,181 - school_management - INFO - Successfully imported student from CSV: Maphalaphatwa Wavhuthu A
2025-09-16 05:40:10,202 - school_management - INFO - Successfully imported student from CSV: Mashiane Neoentle R
2025-09-16 05:40:10,220 - school_management - INFO - Successfully imported student from CSV: Masotla Ofentse
2025-09-16 05:40:10,238 - school_management - INFO - Successfully imported student from CSV: Mnisi Thatego
2025-09-16 05:40:10,267 - school_management - INFO - Successfully imported student from CSV: Mokhonwana Bontle
2025-09-16 05:40:10,287 - school_management - INFO - Successfully imported student from CSV: Msibi Kgatoentle K M
2025-09-16 05:40:10,302 - school_management - INFO - Successfully imported student from CSV: Mushi Keletso
2025-09-16 05:40:10,317 - school_management - INFO - Successfully imported student from CSV: Ncube Sizwe A.
2025-09-16 05:40:10,333 - school_management - INFO - Successfully imported student from CSV: Nkateko Nkadimeng M
2025-09-16 05:40:10,349 - school_management - INFO - Successfully imported student from CSV: Ringane Rebotile A
2025-09-16 05:40:10,365 - school_management - INFO - Successfully imported student from CSV: Setsiba Letlotlo
2025-09-16 05:40:10,382 - school_management - INFO - Successfully imported student from CSV: Thulare Rorisang
2025-09-16 05:40:10,400 - school_management - ERROR - Database error for row 48 in CSV: (sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class 'asyncpg.exceptions.UniqueViolationError'>: duplicate key value violates unique constraint "uq_student_name_grade_class"
DETAIL:  Key (name, grade, class_letter)=(BUSY BEESCHOOL, Grade 7, W) already exists.
[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]
[parameters: (UUID('f144cbdf-755f-4d39-8015-4b1dc834af33'), 'BUSY BEESCHOOL', 'Grade 7', 'W', '27828058088', '27846760610', 'unpaid')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-09-16 05:40:10,419 - school_management - INFO - CSV import complete. Successful: 33, Failed: 14
2025-09-16 05:40:10,430 - school_management - INFO - CSV import process finished for file 'students_data_missing_class_letter.csv'. Summary: {'total_rows_processed': 47, 'successful_imports': [{'row': 14, 'name': 'Phalane Lebogang GJ', 'status': 'success'}, {'row': 15, 'name': 'Ntlhane Didinte L', 'status': 'success'}, {'row': 17, 'name': 'Phalane  Mmapula j', 'status': 'success'}, {'row': 18, 'name': 'Seemise Otlotleng H', 'status': 'success'}, {'row': 19, 'name': 'Simonse  Enelocin J', 'status': 'success'}, {'row': 20, 'name': 'Tseke Gobonwe P', 'status': 'success'}, {'row': 21, 'name': 'Tshabalala Calvin S', 'status': 'success'}, {'row': 22, 'name': 'Tshukudu Tshegofatso', 'status': 'success'}, {'row': 23, 'name': 'Tsita Katlego M', 'status': 'success'}, {'row': 24, 'name': 'Vilakazi Ofentse', 'status': 'success'}, {'row': 25, 'name': 'Baaitjies kamogelo', 'status': 'success'}, {'row': 26, 'name': 'Baloyi Basetsana L', 'status': 'success'}, {'row': 27, 'name': 'Jelu Oluthando', 'status': 'success'}, {'row': 28, 'name': 'Kekana Ontshiametse A', 'status': 'success'}, {'row': 29, 'name': 'Kekana Tshegofatso O H', 'status': 'success'}, {'row': 30, 'name': 'Maubane Reabetswe R E', 'status': 'success'}, {'row': 31, 'name': 'Mahlangu Lesedi B', 'status': 'success'}, {'row': 32, 'name': 'Makhubela Amukelane O', 'status': 'success'}, {'row': 33, 'name': 'Makwela Lethabo R', 'status': 'success'}, {'row': 34, 'name': 'Malungani Onthatile A', 'status': 'success'}, {'row': 35, 'name': 'Mangwathe Onkabetse', 'status': 'success'}, {'row': 36, 'name': 'Maphalaphatwa Wavhuthu A', 'status': 'success'}, {'row': 37, 'name': 'Mashiane Neoentle R', 'status': 'success'}, {'row': 38, 'name': 'Masotla Ofentse', 'status': 'success'}, {'row': 39, 'name': 'Mnisi Thatego', 'status': 'success'}, {'row': 40, 'name': 'Mokhonwana Bontle', 'status': 'success'}, {'row': 41, 'name': 'Msibi Kgatoentle K M', 'status': 'success'}, {'row': 42, 'name': 'Mushi Keletso', 'status': 'success'}, {'row': 43, 'name': 'Ncube Sizwe A.', 'status': 'success'}, {'row': 44, 'name': 'Nkateko Nkadimeng M', 'status': 'success'}, {'row': 45, 'name': 'Ringane Rebotile A', 'status': 'success'}, {'row': 46, 'name': 'Setsiba Letlotlo', 'status': 'success'}, {'row': 47, 'name': 'Thulare Rorisang', 'status': 'success'}], 'failed_imports': [{'row': 2, 'data': {'name': 'Maidi Blessing O', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27738055282', 'parent2_phone': '+27607540650', 'fee_status': 'unpaid', 'id': 'cbd700d2-5e44-438c-b81f-104d425e6a24', 'created_at': '2025-09-03T23:52:26.575045Z', 'updated_at': '2025-09-03T23:52:26.575045Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Maidi Blessing O, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'dca0e124-98ac-4367-a81d-1ad20aa3d65a\'), \'Maidi Blessing O\', \'Grade 7\', \'W\', \'27738055282\', \'27607540650\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 3, 'data': {'name': 'Maloka Kglemo E', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27826660311', 'parent2_phone': '+27827332257', 'fee_status': 'unpaid', 'id': '862fcf54-e769-44e7-ad55-66ef3ea48b66', 'created_at': '2025-09-03T23:53:14.012464Z', 'updated_at': '2025-09-03T23:53:14.012464Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Maloka Kglemo E, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'b12d666a-98ee-46d2-a378-6266b9407f2e\'), \'Maloka Kglemo E\', \'Grade 7\', \'W\', \'27826660311\', \'27827332257\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 4, 'data': {'name': 'Masemola Tshepo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27726856334', 'parent2_phone': '+27815593415', 'fee_status': 'unpaid', 'id': 'ad2fed1b-77b1-4244-9436-708d6ffbae00', 'created_at': '2025-09-03T23:54:21.527415Z', 'updated_at': '2025-09-03T23:54:21.527415Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Masemola Tshepo, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'d3c925ed-5a2a-45f3-990c-daec5f4c04bb\'), \'Masemola Tshepo\', \'Grade 7\', \'W\', \'27726856334\', \'27815593415\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 5, 'data': {'name': 'Mashita Kgalalelo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27606129947', 'parent2_phone': '+27665356951', 'fee_status': 'unpaid', 'id': 'b1dabbae-ca72-425a-b0fc-db237a2eadf6', 'created_at': '2025-09-03T23:57:02.177872Z', 'updated_at': '2025-09-03T23:57:02.177872Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Mashita Kgalalelo, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'c5f89e36-c3ef-4b42-a832-0f25535fb619\'), \'Mashita Kgalalelo\', \'Grade 7\', \'W\', \'27606129947\', \'27665356951\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 6, 'data': {'name': 'Hlongwane Neoentle G', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27724996000', 'parent2_phone': '+27837676954', 'fee_status': 'paid', 'id': 'd04f50a9-ea88-412c-a1d7-7afcf973acb2', 'created_at': '2025-09-03T23:41:25.918811Z', 'updated_at': '2025-09-04T00:03:05.610007Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Hlongwane Neoentle G, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'c56b793e-5682-4e46-921a-19d7372507b8\'), \'Hlongwane Neoentle G\', \'Grade 7\', \'W\', \'27724996000\', \'27837676954\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 7, 'data': {'name': 'Kekana Naledi M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27723295708', 'parent2_phone': '+27606870076', 'fee_status': 'paid', 'id': '588e2fc5-03bc-4a7d-8b08-93d213a7aa76', 'created_at': '2025-09-03T23:44:09.105072Z', 'updated_at': '2025-09-04T00:03:31.375754Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Kekana Naledi M, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'7ab111c3-ba36-45b5-b2bf-a208f7873d3d\'), \'Kekana Naledi M\', \'Grade 7\', \'W\', \'27723295708\', \'27606870076\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 8, 'data': {'name': 'Matlala Ntando', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27728444515', 'parent2_phone': '+27793425591', 'fee_status': 'paid', 'id': '708c5e4e-fa1a-49ff-9a1e-79b6ef38596a', 'created_at': '2025-09-03T23:58:47.284805Z', 'updated_at': '2025-09-04T00:04:25.040693Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Matlala Ntando, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'4efff881-7b02-4563-8d35-aa3cb5c0e892\'), \'Matlala Ntando\', \'Grade 7\', \'W\', \'27728444515\', \'27793425591\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 9, 'data': {'name': 'Kekana Oreneile T', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27723295708', 'parent2_phone': '+27606870076', 'fee_status': 'paid', 'id': '2e5f1f6a-a4c1-4f97-a1f9-7e3e171f24b7', 'created_at': '2025-09-03T23:45:46.339869Z', 'updated_at': '2025-09-04T00:05:34.699087Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Kekana Oreneile T, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'c6a181ee-7fcc-4961-b8ff-01e60113f6ec\'), \'Kekana Oreneile T\', \'Grade 7\', \'W\', \'27723295708\', \'27606870076\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 10, 'data': {'name': 'Kganyo Rorisang P', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27796094888', 'parent2_phone': '+27729382571', 'fee_status': 'paid', 'id': '55db2bff-3825-4479-8668-16c8e8890309', 'created_at': '2025-09-03T23:47:03.079856Z', 'updated_at': '2025-09-04T00:05:35.305802Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Kganyo Rorisang P, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'42a142f0-0600-4bc8-a4e6-5c6254939547\'), \'Kganyo Rorisang P\', \'Grade 7\', \'W\', \'27796094888\', \'27729382571\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 11, 'data': {'name': 'Khoza Tlotlo N', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27787506438', 'parent2_phone': '+27835294948', 'fee_status': 'paid', 'id': 'd276c2c5-f6dc-4140-af05-f0f5e2aabf7e', 'created_at': '2025-09-03T23:48:06.385198Z', 'updated_at': '2025-09-04T00:05:35.911760Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Khoza Tlotlo N, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'798552f3-a208-4508-a74b-ec4fbfa5a704\'), \'Khoza Tlotlo N\', \'Grade 7\', \'W\', \'27787506438\', \'27835294948\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 12, 'data': {'name': 'Mabunda Didintle B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27727888077', 'parent2_phone': '+27762856986', 'fee_status': 'paid', 'id': 'df82d395-8fa1-4947-92c0-559e32e59a6b', 'created_at': '2025-09-03T23:49:15.447557Z', 'updated_at': '2025-09-04T08:15:11.970096Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Mabunda Didintle B, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'225e355c-b9a7-4043-9c43-7f2c34c423f3\'), \'Mabunda Didintle B\', \'Grade 7\', \'W\', \'27727888077\', \'27762856986\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 13, 'data': {'name': 'Mahlonoko Rorisang A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27639660017', 'parent2_phone': '+27826520173', 'fee_status': 'paid', 'id': '6fe4a927-a965-4ece-8b96-550b61a386b0', 'created_at': '2025-09-03T23:51:07.467069Z', 'updated_at': '2025-09-04T08:17:10.606687Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Mahlonoko Rorisang A, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'86301274-6a85-40ae-84fe-6dc5a7e8e33f\'), \'Mahlonoko Rorisang A\', \'Grade 7\', \'W\', \'27639660017\', \'27826520173\', \'paid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 16, 'data': {'name': 'Monyiloti Elizabeth B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27825197504', 'parent2_phone': '+27798874746', 'fee_status': 'unpaid', 'id': '049de030-4878-44b4-b93a-57801aaeef9f', 'created_at': '2025-09-04T10:05:35.762920Z', 'updated_at': '2025-09-04T10:12:31.016890Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(Monyiloti Elizabeth B, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'e55bc0fa-9f39-4b87-9a14-6b6f5c770df9\'), \'Monyiloti Elizabeth B\', \'Grade 7\', \'W\', \'27825197504\', \'27798874746\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}, {'row': 48, 'data': {'name': 'BUSY BEESCHOOL', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27828058088', 'parent2_phone': '+27846760610', 'fee_status': 'unpaid', 'id': 'e931f7cc-b83a-4863-96ee-d56ed8af3552', 'created_at': '2025-09-10T10:10:29.526675Z', 'updated_at': '2025-09-10T10:10:29.526675Z'}, 'errors': '(sqlalchemy.dialects.postgresql.asyncpg.IntegrityError) <class \'asyncpg.exceptions.UniqueViolationError\'>: duplicate key value violates unique constraint "uq_student_name_grade_class"\nDETAIL:  Key (name, grade, class_letter)=(BUSY BEESCHOOL, Grade 7, W) already exists.\n[SQL: INSERT INTO students (id, name, grade, class_letter, parent1_phone, parent2_phone, fee_status) VALUES ($1::UUID, $2::VARCHAR, $3::VARCHAR, $4::VARCHAR, $5::VARCHAR, $6::VARCHAR, $7::VARCHAR) RETURNING students.created_at, students.updated_at]\n[parameters: (UUID(\'f144cbdf-755f-4d39-8015-4b1dc834af33\'), \'BUSY BEESCHOOL\', \'Grade 7\', \'W\', \'27828058088\', \'27846760610\', \'unpaid\')]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)'}]}
2025-09-16 05:40:10,449 - school_management - INFO - POST /api/students/import-csv - 200 - 1.5399s
2025-09-16 05:40:19,307 - school_management - INFO - Fetched 15 students
2025-09-16 05:40:19,556 - school_management - INFO - GET /api/students/ - 200 - 0.3382s
2025-09-16 05:40:19,590 - school_management - INFO - Fetched 15 students
2025-09-16 05:40:19,619 - school_management - INFO - GET /api/students/ - 200 - 0.0394s
2025-09-16 05:40:19,639 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:40:19,668 - school_management - INFO - GET /api/students/grades - 200 - 0.4214s
2025-09-16 05:40:19,676 - school_management - INFO - Fetched 15 students
2025-09-16 05:40:19,704 - school_management - INFO - GET /api/students/ - 200 - 0.0515s
2025-09-16 05:40:19,715 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:40:19,737 - school_management - INFO - GET /api/students/grades - 200 - 0.0448s
2025-09-16 05:44:41,025 - school_management - ERROR - Unexpected error for row 2 in CSV: name 'select' is not defined
2025-09-16 05:44:41,038 - school_management - ERROR - Unexpected error for row 3 in CSV: name 'select' is not defined
2025-09-16 05:44:41,053 - school_management - ERROR - Unexpected error for row 4 in CSV: name 'select' is not defined
2025-09-16 05:44:41,074 - school_management - ERROR - Unexpected error for row 5 in CSV: name 'select' is not defined
2025-09-16 05:44:41,082 - school_management - ERROR - Unexpected error for row 6 in CSV: name 'select' is not defined
2025-09-16 05:44:41,087 - school_management - ERROR - Unexpected error for row 7 in CSV: name 'select' is not defined
2025-09-16 05:44:41,090 - school_management - ERROR - Unexpected error for row 8 in CSV: name 'select' is not defined
2025-09-16 05:44:41,093 - school_management - ERROR - Unexpected error for row 9 in CSV: name 'select' is not defined
2025-09-16 05:44:41,099 - school_management - ERROR - Unexpected error for row 10 in CSV: name 'select' is not defined
2025-09-16 05:44:41,104 - school_management - ERROR - Unexpected error for row 11 in CSV: name 'select' is not defined
2025-09-16 05:44:41,107 - school_management - ERROR - Unexpected error for row 12 in CSV: name 'select' is not defined
2025-09-16 05:44:41,110 - school_management - ERROR - Unexpected error for row 13 in CSV: name 'select' is not defined
2025-09-16 05:44:41,114 - school_management - ERROR - Unexpected error for row 14 in CSV: name 'select' is not defined
2025-09-16 05:44:41,122 - school_management - ERROR - Unexpected error for row 15 in CSV: name 'select' is not defined
2025-09-16 05:44:41,127 - school_management - ERROR - Unexpected error for row 16 in CSV: name 'select' is not defined
2025-09-16 05:44:41,132 - school_management - ERROR - Unexpected error for row 17 in CSV: name 'select' is not defined
2025-09-16 05:44:41,136 - school_management - ERROR - Unexpected error for row 18 in CSV: name 'select' is not defined
2025-09-16 05:44:41,139 - school_management - ERROR - Unexpected error for row 19 in CSV: name 'select' is not defined
2025-09-16 05:44:41,143 - school_management - ERROR - Unexpected error for row 20 in CSV: name 'select' is not defined
2025-09-16 05:44:41,151 - school_management - ERROR - Unexpected error for row 21 in CSV: name 'select' is not defined
2025-09-16 05:44:41,156 - school_management - ERROR - Unexpected error for row 22 in CSV: name 'select' is not defined
2025-09-16 05:44:41,159 - school_management - ERROR - Unexpected error for row 23 in CSV: name 'select' is not defined
2025-09-16 05:44:41,165 - school_management - ERROR - Unexpected error for row 24 in CSV: name 'select' is not defined
2025-09-16 05:44:41,170 - school_management - ERROR - Unexpected error for row 25 in CSV: name 'select' is not defined
2025-09-16 05:44:41,173 - school_management - ERROR - Unexpected error for row 26 in CSV: name 'select' is not defined
2025-09-16 05:44:41,178 - school_management - ERROR - Unexpected error for row 27 in CSV: name 'select' is not defined
2025-09-16 05:44:41,184 - school_management - ERROR - Unexpected error for row 28 in CSV: name 'select' is not defined
2025-09-16 05:44:41,188 - school_management - ERROR - Unexpected error for row 29 in CSV: name 'select' is not defined
2025-09-16 05:44:41,192 - school_management - ERROR - Unexpected error for row 30 in CSV: name 'select' is not defined
2025-09-16 05:44:41,199 - school_management - ERROR - Unexpected error for row 31 in CSV: name 'select' is not defined
2025-09-16 05:44:41,208 - school_management - ERROR - Unexpected error for row 32 in CSV: name 'select' is not defined
2025-09-16 05:44:41,214 - school_management - ERROR - Unexpected error for row 33 in CSV: name 'select' is not defined
2025-09-16 05:44:41,219 - school_management - ERROR - Unexpected error for row 34 in CSV: name 'select' is not defined
2025-09-16 05:44:41,221 - school_management - ERROR - Unexpected error for row 35 in CSV: name 'select' is not defined
2025-09-16 05:44:41,224 - school_management - ERROR - Unexpected error for row 36 in CSV: name 'select' is not defined
2025-09-16 05:44:41,233 - school_management - ERROR - Unexpected error for row 37 in CSV: name 'select' is not defined
2025-09-16 05:44:41,239 - school_management - ERROR - Unexpected error for row 38 in CSV: name 'select' is not defined
2025-09-16 05:44:41,248 - school_management - ERROR - Unexpected error for row 39 in CSV: name 'select' is not defined
2025-09-16 05:44:41,251 - school_management - ERROR - Unexpected error for row 40 in CSV: name 'select' is not defined
2025-09-16 05:44:41,255 - school_management - ERROR - Unexpected error for row 41 in CSV: name 'select' is not defined
2025-09-16 05:44:41,260 - school_management - ERROR - Unexpected error for row 42 in CSV: name 'select' is not defined
2025-09-16 05:44:41,265 - school_management - ERROR - Unexpected error for row 43 in CSV: name 'select' is not defined
2025-09-16 05:44:41,268 - school_management - ERROR - Unexpected error for row 44 in CSV: name 'select' is not defined
2025-09-16 05:44:41,272 - school_management - ERROR - Unexpected error for row 45 in CSV: name 'select' is not defined
2025-09-16 05:44:41,274 - school_management - ERROR - Unexpected error for row 46 in CSV: name 'select' is not defined
2025-09-16 05:44:41,283 - school_management - ERROR - Unexpected error for row 47 in CSV: name 'select' is not defined
2025-09-16 05:44:41,287 - school_management - ERROR - Unexpected error for row 48 in CSV: name 'select' is not defined
2025-09-16 05:44:41,292 - school_management - INFO - CSV import complete. Successful: 0, Failed: 47
2025-09-16 05:44:41,297 - school_management - INFO - CSV import process finished for file 'students_data_missing_class_letter.csv'. Summary: {'total_rows_processed': 47, 'successful_imports': [], 'failed_imports': [{'row': 2, 'data': {'name': 'Maidi Blessing O', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27738055282', 'parent2_phone': '+27607540650', 'fee_status': 'unpaid', 'id': 'cbd700d2-5e44-438c-b81f-104d425e6a24', 'created_at': '2025-09-03T23:52:26.575045Z', 'updated_at': '2025-09-03T23:52:26.575045Z'}, 'errors': "name 'select' is not defined"}, {'row': 3, 'data': {'name': 'Maloka Kglemo E', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27826660311', 'parent2_phone': '+27827332257', 'fee_status': 'unpaid', 'id': '862fcf54-e769-44e7-ad55-66ef3ea48b66', 'created_at': '2025-09-03T23:53:14.012464Z', 'updated_at': '2025-09-03T23:53:14.012464Z'}, 'errors': "name 'select' is not defined"}, {'row': 4, 'data': {'name': 'Masemola Tshepo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27726856334', 'parent2_phone': '+27815593415', 'fee_status': 'unpaid', 'id': 'ad2fed1b-77b1-4244-9436-708d6ffbae00', 'created_at': '2025-09-03T23:54:21.527415Z', 'updated_at': '2025-09-03T23:54:21.527415Z'}, 'errors': "name 'select' is not defined"}, {'row': 5, 'data': {'name': 'Mashita Kgalalelo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27606129947', 'parent2_phone': '+27665356951', 'fee_status': 'unpaid', 'id': 'b1dabbae-ca72-425a-b0fc-db237a2eadf6', 'created_at': '2025-09-03T23:57:02.177872Z', 'updated_at': '2025-09-03T23:57:02.177872Z'}, 'errors': "name 'select' is not defined"}, {'row': 6, 'data': {'name': 'Hlongwane Neoentle G', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27724996000', 'parent2_phone': '+27837676954', 'fee_status': 'paid', 'id': 'd04f50a9-ea88-412c-a1d7-7afcf973acb2', 'created_at': '2025-09-03T23:41:25.918811Z', 'updated_at': '2025-09-04T00:03:05.610007Z'}, 'errors': "name 'select' is not defined"}, {'row': 7, 'data': {'name': 'Kekana Naledi M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27723295708', 'parent2_phone': '+27606870076', 'fee_status': 'paid', 'id': '588e2fc5-03bc-4a7d-8b08-93d213a7aa76', 'created_at': '2025-09-03T23:44:09.105072Z', 'updated_at': '2025-09-04T00:03:31.375754Z'}, 'errors': "name 'select' is not defined"}, {'row': 8, 'data': {'name': 'Matlala Ntando', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27728444515', 'parent2_phone': '+27793425591', 'fee_status': 'paid', 'id': '708c5e4e-fa1a-49ff-9a1e-79b6ef38596a', 'created_at': '2025-09-03T23:58:47.284805Z', 'updated_at': '2025-09-04T00:04:25.040693Z'}, 'errors': "name 'select' is not defined"}, {'row': 9, 'data': {'name': 'Kekana Oreneile T', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27723295708', 'parent2_phone': '+27606870076', 'fee_status': 'paid', 'id': '2e5f1f6a-a4c1-4f97-a1f9-7e3e171f24b7', 'created_at': '2025-09-03T23:45:46.339869Z', 'updated_at': '2025-09-04T00:05:34.699087Z'}, 'errors': "name 'select' is not defined"}, {'row': 10, 'data': {'name': 'Kganyo Rorisang P', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27796094888', 'parent2_phone': '+27729382571', 'fee_status': 'paid', 'id': '55db2bff-3825-4479-8668-16c8e8890309', 'created_at': '2025-09-03T23:47:03.079856Z', 'updated_at': '2025-09-04T00:05:35.305802Z'}, 'errors': "name 'select' is not defined"}, {'row': 11, 'data': {'name': 'Khoza Tlotlo N', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27787506438', 'parent2_phone': '+27835294948', 'fee_status': 'paid', 'id': 'd276c2c5-f6dc-4140-af05-f0f5e2aabf7e', 'created_at': '2025-09-03T23:48:06.385198Z', 'updated_at': '2025-09-04T00:05:35.911760Z'}, 'errors': "name 'select' is not defined"}, {'row': 12, 'data': {'name': 'Mabunda Didintle B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27727888077', 'parent2_phone': '+27762856986', 'fee_status': 'paid', 'id': 'df82d395-8fa1-4947-92c0-559e32e59a6b', 'created_at': '2025-09-03T23:49:15.447557Z', 'updated_at': '2025-09-04T08:15:11.970096Z'}, 'errors': "name 'select' is not defined"}, {'row': 13, 'data': {'name': 'Mahlonoko Rorisang A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27639660017', 'parent2_phone': '+27826520173', 'fee_status': 'paid', 'id': '6fe4a927-a965-4ece-8b96-550b61a386b0', 'created_at': '2025-09-03T23:51:07.467069Z', 'updated_at': '2025-09-04T08:17:10.606687Z'}, 'errors': "name 'select' is not defined"}, {'row': 14, 'data': {'name': 'Phalane Lebogang GJ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27731080032', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'd6d87735-c30f-466b-a724-0a6124884c28', 'created_at': '2025-09-04T10:10:21.877559Z', 'updated_at': '2025-09-04T10:10:21.877559Z'}, 'errors': "name 'select' is not defined"}, {'row': 15, 'data': {'name': 'Ntlhane Didinte L', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27649463590', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'd5392353-d868-46e7-9231-9134d436e50b', 'created_at': '2025-09-04T10:08:55.042089Z', 'updated_at': '2025-09-04T10:12:12.558083Z'}, 'errors': "name 'select' is not defined"}, {'row': 16, 'data': {'name': 'Monyiloti Elizabeth B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27825197504', 'parent2_phone': '+27798874746', 'fee_status': 'unpaid', 'id': '049de030-4878-44b4-b93a-57801aaeef9f', 'created_at': '2025-09-04T10:05:35.762920Z', 'updated_at': '2025-09-04T10:12:31.016890Z'}, 'errors': "name 'select' is not defined"}, {'row': 17, 'data': {'name': 'Phalane  Mmapula j', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27845500709', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '6e460e8b-df34-4193-8acd-be141112cf40', 'created_at': '2025-09-04T10:13:48.881254Z', 'updated_at': '2025-09-04T10:13:48.881254Z'}, 'errors': "name 'select' is not defined"}, {'row': 18, 'data': {'name': 'Seemise Otlotleng H', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27660884166', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'ef1fe5e8-0cdd-4f2c-b774-78458c91036d', 'created_at': '2025-09-04T10:16:03.370201Z', 'updated_at': '2025-09-04T10:16:03.370201Z'}, 'errors': "name 'select' is not defined"}, {'row': 19, 'data': {'name': 'Simonse  Enelocin J', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27729540118', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '145c83bc-6bbd-491c-9953-c4d1386d99d3', 'created_at': '2025-09-04T10:17:28.522075Z', 'updated_at': '2025-09-04T10:17:28.522075Z'}, 'errors': "name 'select' is not defined"}, {'row': 20, 'data': {'name': 'Tseke Gobonwe P', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27823592379', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '3cde7a71-d600-463c-80f7-ba0a75dbf4ea', 'created_at': '2025-09-04T10:18:43.821813Z', 'updated_at': '2025-09-04T10:18:43.821813Z'}, 'errors': "name 'select' is not defined"}, {'row': 21, 'data': {'name': 'Tshabalala Calvin S', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27826923322', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'c4940b8f-2ae9-477d-a994-31b4b324c862', 'created_at': '2025-09-04T10:20:03.081365Z', 'updated_at': '2025-09-04T10:20:03.081365Z'}, 'errors': "name 'select' is not defined"}, {'row': 22, 'data': {'name': 'Tshukudu Tshegofatso', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27820891423', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '5ec9d230-3e95-4af4-95ca-5022efc8768b', 'created_at': '2025-09-04T10:21:11.596005Z', 'updated_at': '2025-09-04T10:21:11.596005Z'}, 'errors': "name 'select' is not defined"}, {'row': 23, 'data': {'name': 'Tsita Katlego M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27657089423', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '5641cd6a-8baf-432b-8466-85564b1d24f7', 'created_at': '2025-09-04T10:22:08.916392Z', 'updated_at': '2025-09-04T10:22:08.916392Z'}, 'errors': "name 'select' is not defined"}, {'row': 24, 'data': {'name': 'Vilakazi Ofentse ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27612801844', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '342f832c-8274-48f9-b51e-3a0b6fac718c', 'created_at': '2025-09-04T10:23:08.855619Z', 'updated_at': '2025-09-04T10:23:08.855619Z'}, 'errors': "name 'select' is not defined"}, {'row': 25, 'data': {'name': 'Baaitjies kamogelo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27763703418', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '09e4a172-ab35-4f77-9961-d8d3e3f0c618', 'created_at': '2025-09-08T10:03:13.804487Z', 'updated_at': '2025-09-08T10:03:13.804487Z'}, 'errors': "name 'select' is not defined"}, {'row': 26, 'data': {'name': 'Baloyi Basetsana L', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27648492542', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '03b89365-da4f-4e3e-9d8e-3479c5aedded', 'created_at': '2025-09-08T10:04:20.472479Z', 'updated_at': '2025-09-08T10:04:20.472479Z'}, 'errors': "name 'select' is not defined"}, {'row': 27, 'data': {'name': 'Jelu Oluthando ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27662919372', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '4ae86fbd-544e-457a-b974-3aebde4b268d', 'created_at': '2025-09-08T10:05:30.240910Z', 'updated_at': '2025-09-08T10:05:30.240910Z'}, 'errors': "name 'select' is not defined"}, {'row': 28, 'data': {'name': 'Kekana Ontshiametse A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27678073417', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '63b540bc-a8ec-4364-8063-9fd92f03b3c5', 'created_at': '2025-09-08T10:08:38.810587Z', 'updated_at': '2025-09-08T10:08:38.810587Z'}, 'errors': "name 'select' is not defined"}, {'row': 29, 'data': {'name': 'Kekana Tshegofatso O H', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27680002829', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'ae866c4d-29ac-4f61-ab06-2a66d1d60c92', 'created_at': '2025-09-08T10:09:54.620566Z', 'updated_at': '2025-09-08T10:09:54.620566Z'}, 'errors': "name 'select' is not defined"}, {'row': 30, 'data': {'name': 'Maubane Reabetswe R E', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27834367751', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'e27d59fb-3948-4fa3-935a-8e7931107e06', 'created_at': '2025-09-08T10:11:36.544285Z', 'updated_at': '2025-09-08T10:11:36.544285Z'}, 'errors': "name 'select' is not defined"}, {'row': 31, 'data': {'name': 'Mahlangu Lesedi B', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27780563681', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '6a5a8fd7-9a45-4de8-8e93-ed6254b19f97', 'created_at': '2025-09-08T10:12:24.615513Z', 'updated_at': '2025-09-08T10:12:24.615513Z'}, 'errors': "name 'select' is not defined"}, {'row': 32, 'data': {'name': 'Makhubela Amukelane O', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27647092791', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '2aa6b0ae-2a07-4b51-b025-af176609009a', 'created_at': '2025-09-08T10:13:09.711091Z', 'updated_at': '2025-09-08T10:13:09.711091Z'}, 'errors': "name 'select' is not defined"}, {'row': 33, 'data': {'name': 'Makwela Lethabo R', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27125239120', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'c4315b65-a32c-46b9-91a2-aa2fb86ed3fd', 'created_at': '2025-09-08T10:14:21.753455Z', 'updated_at': '2025-09-08T10:14:21.753455Z'}, 'errors': "name 'select' is not defined"}, {'row': 34, 'data': {'name': 'Malungani Onthatile A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27763162008', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '03867889-29fb-411b-83cb-88930ca66bae', 'created_at': '2025-09-08T10:15:05.479959Z', 'updated_at': '2025-09-08T10:15:05.479959Z'}, 'errors': "name 'select' is not defined"}, {'row': 35, 'data': {'name': 'Mangwathe Onkabetse', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27799251939', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '2a19513c-c0fa-4ac5-906f-c251ad079b93', 'created_at': '2025-09-08T10:17:36.279474Z', 'updated_at': '2025-09-08T10:17:36.279474Z'}, 'errors': "name 'select' is not defined"}, {'row': 36, 'data': {'name': 'Maphalaphatwa Wavhuthu A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27722264629', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '238a3f38-67dd-4352-a6a4-70e493e803c5', 'created_at': '2025-09-08T10:18:37.950978Z', 'updated_at': '2025-09-08T10:18:37.950978Z'}, 'errors': "name 'select' is not defined"}, {'row': 37, 'data': {'name': 'Mashiane Neoentle R', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27712335782', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '6ed2b06a-c95a-43a4-a82c-73685975b9c7', 'created_at': '2025-09-08T10:19:32.920799Z', 'updated_at': '2025-09-08T10:19:32.920799Z'}, 'errors': "name 'select' is not defined"}, {'row': 38, 'data': {'name': 'Masotla Ofentse', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27822142342', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'd6aec764-5356-4719-bde5-c3bdc5ea825f', 'created_at': '2025-09-08T10:20:14.010864Z', 'updated_at': '2025-09-08T10:20:14.010864Z'}, 'errors': "name 'select' is not defined"}, {'row': 39, 'data': {'name': 'Mnisi Thatego', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27792472467', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '348bb925-1ceb-47ca-8699-6378463cc239', 'created_at': '2025-09-08T10:20:57.129571Z', 'updated_at': '2025-09-08T10:20:57.129571Z'}, 'errors': "name 'select' is not defined"}, {'row': 40, 'data': {'name': 'Mokhonwana Bontle', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27818683741', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '1cc21c1e-092e-46ee-953a-4b38252e73c8', 'created_at': '2025-09-08T10:22:14.560939Z', 'updated_at': '2025-09-08T10:22:14.560939Z'}, 'errors': "name 'select' is not defined"}, {'row': 41, 'data': {'name': 'Msibi Kgatoentle K M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27793074395', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'ecfa1387-8983-4601-bae0-bcfd22c69399', 'created_at': '2025-09-08T10:23:27.342295Z', 'updated_at': '2025-09-08T10:23:27.342295Z'}, 'errors': "name 'select' is not defined"}, {'row': 42, 'data': {'name': 'Mushi Keletso ', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27764891895', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'c9f095aa-9afd-41a9-8dbf-606d7c04bf95', 'created_at': '2025-09-08T10:24:19.529070Z', 'updated_at': '2025-09-08T10:24:19.529070Z'}, 'errors': "name 'select' is not defined"}, {'row': 43, 'data': {'name': 'Ncube Sizwe A.', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27832899769', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '594867b3-2dc9-4373-8b2d-97e7f6e01e13', 'created_at': '2025-09-08T10:25:22.907873Z', 'updated_at': '2025-09-08T10:25:22.907873Z'}, 'errors': "name 'select' is not defined"}, {'row': 44, 'data': {'name': 'Nkateko Nkadimeng M', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27719119705', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'cf684b09-4fac-43e1-bf3e-306000678923', 'created_at': '2025-09-08T10:26:15.069373Z', 'updated_at': '2025-09-08T10:26:15.069373Z'}, 'errors': "name 'select' is not defined"}, {'row': 45, 'data': {'name': 'Ringane Rebotile A', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27839948090', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': 'f89537a0-90a4-4da4-b6a0-7c3c14424b3c', 'created_at': '2025-09-08T10:27:51.840835Z', 'updated_at': '2025-09-08T10:27:51.840835Z'}, 'errors': "name 'select' is not defined"}, {'row': 46, 'data': {'name': 'Setsiba Letlotlo', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27720821022', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '8c20e900-7d4e-48e3-921d-8e04c47f854a', 'created_at': '2025-09-08T10:28:27.319485Z', 'updated_at': '2025-09-08T10:28:27.319485Z'}, 'errors': "name 'select' is not defined"}, {'row': 47, 'data': {'name': 'Thulare Rorisang', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27763659285', 'parent2_phone': 'null', 'fee_status': 'unpaid', 'id': '79412026-b152-4b25-99bd-d77871d75ec6', 'created_at': '2025-09-08T10:29:06.549924Z', 'updated_at': '2025-09-08T10:29:06.549924Z'}, 'errors': "name 'select' is not defined"}, {'row': 48, 'data': {'name': 'BUSY BEESCHOOL', 'grade': 'Grade 7', 'class_letter': 'W', 'parent1_phone': '+27828058088', 'parent2_phone': '+27846760610', 'fee_status': 'unpaid', 'id': 'e931f7cc-b83a-4863-96ee-d56ed8af3552', 'created_at': '2025-09-10T10:10:29.526675Z', 'updated_at': '2025-09-10T10:10:29.526675Z'}, 'errors': "name 'select' is not defined"}]}
2025-09-16 05:44:41,305 - school_management - INFO - POST /api/students/import-csv - 200 - 0.2959s
2025-09-16 05:44:53,793 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:44:53,877 - school_management - INFO - GET /api/students/grades - 200 - 0.1591s
2025-09-16 05:44:53,917 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:44:53,937 - school_management - INFO - GET /api/students/grades - 200 - 0.0239s
2025-09-16 05:44:54,008 - school_management - INFO - Fetched 15 students
2025-09-16 05:44:54,022 - school_management - INFO - GET /api/students/ - 200 - 0.2555s
2025-09-16 05:44:54,216 - school_management - INFO - Fetched 15 students
2025-09-16 05:44:54,323 - school_management - INFO - GET /api/students/ - 200 - 0.1240s
2025-09-16 05:44:54,357 - school_management - INFO - Fetched 15 students
2025-09-16 05:44:54,384 - school_management - INFO - GET /api/students/ - 200 - 0.0325s
2025-09-16 05:47:22,679 - school_management - INFO - GET /api/sms/history - 200 - 0.0894s
2025-09-16 05:47:22,910 - school_management - INFO - GET /api/sms/history - 200 - 0.0086s
2025-09-16 05:47:22,970 - school_management - INFO - GET /api/sms/history - 200 - 0.0415s
2025-09-16 05:47:22,989 - school_management - INFO - Fetched 15 students
2025-09-16 05:47:23,006 - school_management - INFO - GET /api/students/ - 200 - 0.3618s
2025-09-16 05:47:23,037 - school_management - INFO - Fetched 15 students
2025-09-16 05:47:23,051 - school_management - INFO - GET /api/students/ - 200 - 0.0342s
2025-09-16 05:47:23,082 - school_management - INFO - Fetched 15 students
2025-09-16 05:47:23,098 - school_management - INFO - GET /api/students/ - 200 - 0.0286s
2025-09-16 05:47:23,140 - school_management - INFO - Fetched 15 students
2025-09-16 05:47:23,162 - school_management - INFO - GET /api/students/ - 200 - 0.0281s
2025-09-16 05:49:04,667 - school_management - INFO - Fetched 15 students
2025-09-16 05:49:04,699 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:49:04,714 - school_management - INFO - GET /api/students/ - 200 - 0.0539s
2025-09-16 05:49:04,730 - school_management - INFO - GET /api/students/grades - 200 - 0.0867s
2025-09-16 05:49:04,767 - school_management - INFO - Fetched 15 students
2025-09-16 05:49:04,784 - school_management - INFO - GET /api/students/ - 200 - 0.0220s
2025-09-16 05:49:04,799 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:49:04,814 - school_management - INFO - GET /api/students/grades - 200 - 0.0330s
2025-09-16 05:49:04,837 - school_management - INFO - Fetched 15 students
2025-09-16 05:49:04,845 - school_management - INFO - GET /api/students/ - 200 - 0.0307s
2025-09-16 05:49:09,143 - school_management - INFO - Successfully updated existing student from CSV: Maidi Blessing O
2025-09-16 05:49:09,220 - school_management - INFO - Successfully updated existing student from CSV: Maloka Kglemo E
2025-09-16 05:49:09,247 - school_management - INFO - Successfully updated existing student from CSV: Masemola Tshepo
2025-09-16 05:49:09,267 - school_management - INFO - Successfully updated existing student from CSV: Mashita Kgalalelo
2025-09-16 05:49:09,287 - school_management - INFO - Successfully updated existing student from CSV: Hlongwane Neoentle G
2025-09-16 05:49:09,322 - school_management - INFO - Successfully updated existing student from CSV: Kekana Naledi M
2025-09-16 05:49:09,341 - school_management - INFO - Successfully updated existing student from CSV: Matlala Ntando
2025-09-16 05:49:09,368 - school_management - INFO - Successfully updated existing student from CSV: Kekana Oreneile T
2025-09-16 05:49:09,400 - school_management - INFO - Successfully updated existing student from CSV: Kganyo Rorisang P
2025-09-16 05:49:09,421 - school_management - INFO - Successfully updated existing student from CSV: Khoza Tlotlo N
2025-09-16 05:49:09,438 - school_management - INFO - Successfully updated existing student from CSV: Mabunda Didintle B
2025-09-16 05:49:09,466 - school_management - INFO - Successfully updated existing student from CSV: Mahlonoko Rorisang A
2025-09-16 05:49:09,510 - school_management - INFO - Successfully created new student from CSV: Phalane Lebogang GJ
2025-09-16 05:49:09,542 - school_management - INFO - Successfully created new student from CSV: Ntlhane Didinte L
2025-09-16 05:49:09,567 - school_management - INFO - Successfully updated existing student from CSV: Monyiloti Elizabeth B
2025-09-16 05:49:09,599 - school_management - INFO - Successfully created new student from CSV: Phalane  Mmapula j
2025-09-16 05:49:09,633 - school_management - INFO - Successfully created new student from CSV: Seemise Otlotleng H
2025-09-16 05:49:09,664 - school_management - INFO - Successfully created new student from CSV: Simonse  Enelocin J
2025-09-16 05:49:09,689 - school_management - INFO - Successfully created new student from CSV: Tseke Gobonwe P
2025-09-16 05:49:09,725 - school_management - INFO - Successfully created new student from CSV: Tshabalala Calvin S
2025-09-16 05:49:09,765 - school_management - INFO - Successfully created new student from CSV: Tshukudu Tshegofatso
2025-09-16 05:49:09,789 - school_management - INFO - Successfully created new student from CSV: Tsita Katlego M
2025-09-16 05:49:09,821 - school_management - INFO - Successfully created new student from CSV: Vilakazi Ofentse
2025-09-16 05:49:09,865 - school_management - INFO - Successfully created new student from CSV: Baaitjies kamogelo
2025-09-16 05:49:09,896 - school_management - INFO - Successfully created new student from CSV: Baloyi Basetsana L
2025-09-16 05:49:09,937 - school_management - INFO - Successfully created new student from CSV: Jelu Oluthando
2025-09-16 05:49:09,982 - school_management - INFO - Successfully created new student from CSV: Kekana Ontshiametse A
2025-09-16 05:49:10,017 - school_management - INFO - Successfully created new student from CSV: Kekana Tshegofatso O H
2025-09-16 05:49:10,056 - school_management - INFO - Successfully created new student from CSV: Maubane Reabetswe R E
2025-09-16 05:49:10,090 - school_management - INFO - Successfully created new student from CSV: Mahlangu Lesedi B
2025-09-16 05:49:10,110 - school_management - INFO - Successfully created new student from CSV: Makhubela Amukelane O
2025-09-16 05:49:10,158 - school_management - INFO - Successfully created new student from CSV: Makwela Lethabo R
2025-09-16 05:49:10,189 - school_management - INFO - Successfully created new student from CSV: Malungani Onthatile A
2025-09-16 05:49:10,229 - school_management - INFO - Successfully created new student from CSV: Mangwathe Onkabetse
2025-09-16 05:49:10,250 - school_management - INFO - Successfully created new student from CSV: Maphalaphatwa Wavhuthu A
2025-09-16 05:49:10,277 - school_management - INFO - Successfully created new student from CSV: Mashiane Neoentle R
2025-09-16 05:49:10,312 - school_management - INFO - Successfully created new student from CSV: Masotla Ofentse
2025-09-16 05:49:10,337 - school_management - INFO - Successfully created new student from CSV: Mnisi Thatego
2025-09-16 05:49:10,378 - school_management - INFO - Successfully created new student from CSV: Mokhonwana Bontle
2025-09-16 05:49:10,402 - school_management - INFO - Successfully created new student from CSV: Msibi Kgatoentle K M
2025-09-16 05:49:10,442 - school_management - INFO - Successfully created new student from CSV: Mushi Keletso
2025-09-16 05:49:10,478 - school_management - INFO - Successfully created new student from CSV: Ncube Sizwe A.
2025-09-16 05:49:10,510 - school_management - INFO - Successfully created new student from CSV: Nkateko Nkadimeng M
2025-09-16 05:49:10,578 - school_management - INFO - Successfully created new student from CSV: Ringane Rebotile A
2025-09-16 05:49:10,694 - school_management - INFO - Successfully created new student from CSV: Setsiba Letlotlo
2025-09-16 05:49:10,743 - school_management - INFO - Successfully created new student from CSV: Thulare Rorisang
2025-09-16 05:49:10,778 - school_management - INFO - Successfully updated existing student from CSV: BUSY BEESCHOOL
2025-09-16 05:49:10,839 - school_management - INFO - CSV import complete. Successful: 47, Failed: 0
2025-09-16 05:49:10,844 - school_management - INFO - CSV import process finished for file 'students_data_missing_class_letter.csv'. Summary: {'total_rows_processed': 47, 'successful_imports': [{'row': 2, 'name': 'Maidi Blessing O', 'status': 'updated'}, {'row': 3, 'name': 'Maloka Kglemo E', 'status': 'updated'}, {'row': 4, 'name': 'Masemola Tshepo', 'status': 'updated'}, {'row': 5, 'name': 'Mashita Kgalalelo', 'status': 'updated'}, {'row': 6, 'name': 'Hlongwane Neoentle G', 'status': 'updated'}, {'row': 7, 'name': 'Kekana Naledi M', 'status': 'updated'}, {'row': 8, 'name': 'Matlala Ntando', 'status': 'updated'}, {'row': 9, 'name': 'Kekana Oreneile T', 'status': 'updated'}, {'row': 10, 'name': 'Kganyo Rorisang P', 'status': 'updated'}, {'row': 11, 'name': 'Khoza Tlotlo N', 'status': 'updated'}, {'row': 12, 'name': 'Mabunda Didintle B', 'status': 'updated'}, {'row': 13, 'name': 'Mahlonoko Rorisang A', 'status': 'updated'}, {'row': 14, 'name': 'Phalane Lebogang GJ', 'status': 'created'}, {'row': 15, 'name': 'Ntlhane Didinte L', 'status': 'created'}, {'row': 16, 'name': 'Monyiloti Elizabeth B', 'status': 'updated'}, {'row': 17, 'name': 'Phalane  Mmapula j', 'status': 'created'}, {'row': 18, 'name': 'Seemise Otlotleng H', 'status': 'created'}, {'row': 19, 'name': 'Simonse  Enelocin J', 'status': 'created'}, {'row': 20, 'name': 'Tseke Gobonwe P', 'status': 'created'}, {'row': 21, 'name': 'Tshabalala Calvin S', 'status': 'created'}, {'row': 22, 'name': 'Tshukudu Tshegofatso', 'status': 'created'}, {'row': 23, 'name': 'Tsita Katlego M', 'status': 'created'}, {'row': 24, 'name': 'Vilakazi Ofentse', 'status': 'created'}, {'row': 25, 'name': 'Baaitjies kamogelo', 'status': 'created'}, {'row': 26, 'name': 'Baloyi Basetsana L', 'status': 'created'}, {'row': 27, 'name': 'Jelu Oluthando', 'status': 'created'}, {'row': 28, 'name': 'Kekana Ontshiametse A', 'status': 'created'}, {'row': 29, 'name': 'Kekana Tshegofatso O H', 'status': 'created'}, {'row': 30, 'name': 'Maubane Reabetswe R E', 'status': 'created'}, {'row': 31, 'name': 'Mahlangu Lesedi B', 'status': 'created'}, {'row': 32, 'name': 'Makhubela Amukelane O', 'status': 'created'}, {'row': 33, 'name': 'Makwela Lethabo R', 'status': 'created'}, {'row': 34, 'name': 'Malungani Onthatile A', 'status': 'created'}, {'row': 35, 'name': 'Mangwathe Onkabetse', 'status': 'created'}, {'row': 36, 'name': 'Maphalaphatwa Wavhuthu A', 'status': 'created'}, {'row': 37, 'name': 'Mashiane Neoentle R', 'status': 'created'}, {'row': 38, 'name': 'Masotla Ofentse', 'status': 'created'}, {'row': 39, 'name': 'Mnisi Thatego', 'status': 'created'}, {'row': 40, 'name': 'Mokhonwana Bontle', 'status': 'created'}, {'row': 41, 'name': 'Msibi Kgatoentle K M', 'status': 'created'}, {'row': 42, 'name': 'Mushi Keletso', 'status': 'created'}, {'row': 43, 'name': 'Ncube Sizwe A.', 'status': 'created'}, {'row': 44, 'name': 'Nkateko Nkadimeng M', 'status': 'created'}, {'row': 45, 'name': 'Ringane Rebotile A', 'status': 'created'}, {'row': 46, 'name': 'Setsiba Letlotlo', 'status': 'created'}, {'row': 47, 'name': 'Thulare Rorisang', 'status': 'created'}, {'row': 48, 'name': 'BUSY BEESCHOOL', 'status': 'updated'}], 'failed_imports': []}
2025-09-16 05:49:10,851 - school_management - INFO - POST /api/students/import-csv - 200 - 1.7498s
2025-09-16 05:49:23,988 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:49:23,999 - school_management - INFO - GET /api/students/grades - 200 - 0.0251s
2025-09-16 05:49:24,049 - school_management - INFO - Fetched 48 students
2025-09-16 05:49:24,071 - school_management - INFO - GET /api/students/ - 200 - 0.0744s
2025-09-16 05:49:24,085 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:49:24,100 - school_management - INFO - GET /api/students/grades - 200 - 0.0343s
2025-09-16 05:49:24,132 - school_management - INFO - Fetched 48 students
2025-09-16 05:49:24,150 - school_management - INFO - GET /api/students/ - 200 - 0.0331s
2025-09-16 05:49:24,182 - school_management - INFO - Fetched 48 students
2025-09-16 05:49:24,201 - school_management - INFO - GET /api/students/ - 200 - 0.0252s
2025-09-16 05:50:48,853 - school_management - INFO - Fetched 48 students
2025-09-16 05:50:48,873 - school_management - INFO - GET /api/students/ - 200 - 0.0488s
2025-09-16 05:50:48,889 - school_management - INFO - GET /api/sms/history - 200 - 0.0711s
2025-09-16 05:50:48,938 - school_management - INFO - Fetched 48 students
2025-09-16 05:50:48,958 - school_management - INFO - GET /api/students/ - 200 - 0.0525s
2025-09-16 05:50:48,975 - school_management - INFO - GET /api/sms/history - 200 - 0.0534s
2025-09-16 05:50:49,018 - school_management - INFO - Fetched 48 students
2025-09-16 05:50:49,035 - school_management - INFO - GET /api/students/ - 200 - 0.0462s
2025-09-16 05:50:49,067 - school_management - INFO - GET /api/sms/history - 200 - 0.0640s
2025-09-16 05:50:49,110 - school_management - INFO - Fetched 48 students
2025-09-16 05:50:49,129 - school_management - INFO - GET /api/students/ - 200 - 0.0768s
2025-09-16 05:52:28,002 - school_management - INFO - Fetched 48 students
2025-09-16 05:52:28,070 - school_management - INFO - GET /api/students/ - 200 - 0.1391s
2025-09-16 05:52:38,492 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:52:38,506 - school_management - INFO - GET /api/students/grades - 200 - 0.0799s
2025-09-16 05:52:38,541 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:52:38,557 - school_management - INFO - GET /api/students/grades - 200 - 0.0283s
2025-09-16 05:52:44,149 - school_management - INFO - Fetched 48 students
2025-09-16 05:52:44,180 - school_management - INFO - GET /api/students/ - 200 - 0.0519s
2025-09-16 05:52:44,204 - school_management - INFO - Fetched 48 students
2025-09-16 05:52:44,252 - school_management - INFO - GET /api/students/ - 200 - 0.0536s
2025-09-16 05:55:06,099 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:55:06,159 - school_management - INFO - GET /api/students/grades - 200 - 0.0671s
2025-09-16 05:55:06,188 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:55:06,208 - school_management - INFO - GET /api/students/grades - 200 - 0.0249s
2025-09-16 05:59:11,058 - school_management - INFO - Fetched 48 students
2025-09-16 05:59:11,065 - school_management - INFO - GET /api/students/ - 200 - 0.0339s
2025-09-16 05:59:11,094 - school_management - INFO - Fetched 48 students
2025-09-16 05:59:11,115 - school_management - INFO - GET /api/students/ - 200 - 0.0324s
2025-09-16 05:59:19,843 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:59:19,861 - school_management - INFO - GET /api/students/grades - 200 - 0.0229s
2025-09-16 05:59:19,919 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 05:59:19,939 - school_management - INFO - GET /api/students/grades - 200 - 0.0237s
2025-09-16 06:00:35,710 - school_management - INFO - Fetched 48 students
2025-09-16 06:00:35,778 - school_management - INFO - GET /api/students/ - 200 - 0.0785s
2025-09-16 06:14:33,174 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 06:14:33,193 - school_management - INFO - GET /api/students/grades - 200 - 0.0585s
2025-09-16 06:14:33,224 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 06:14:33,240 - school_management - INFO - GET /api/students/grades - 200 - 0.0208s
2025-09-16 06:15:25,863 - school_management - INFO - Fetched 48 students
2025-09-16 06:15:25,884 - school_management - INFO - GET /api/students/ - 200 - 0.1365s
2025-09-16 06:15:25,925 - school_management - INFO - Fetched 48 students
2025-09-16 06:15:26,002 - school_management - INFO - GET /api/students/ - 200 - 0.0828s
2025-09-16 06:19:17,051 - school_management - INFO - Fetched student: 61961cf8-6efc-4fd5-bd96-88412d1456d5
2025-09-16 06:19:17,081 - school_management - INFO - GET /api/students/61961cf8-6efc-4fd5-bd96-88412d1456d5 - 200 - 0.1614s
2025-09-16 06:20:47,325 - school_management - INFO - Fetched 48 students
2025-09-16 06:20:47,359 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 06:20:47,382 - school_management - INFO - GET /api/students/ - 200 - 0.5403s
2025-09-16 06:20:47,432 - school_management - INFO - GET /api/students/grades - 200 - 0.7233s
2025-09-16 06:20:47,464 - school_management - INFO - Fetched 48 students
2025-09-16 06:20:47,506 - school_management - INFO - GET /api/students/ - 200 - 0.0555s
2025-09-16 06:20:47,518 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 06:20:47,546 - school_management - INFO - GET /api/students/grades - 200 - 0.0583s
2025-09-16 06:20:47,572 - school_management - INFO - Fetched 48 students
2025-09-16 06:20:47,625 - school_management - INFO - GET /api/students/ - 200 - 0.0596s
2025-09-16 06:20:51,799 - school_management - INFO - Fetched 48 students
2025-09-16 06:20:51,891 - school_management - INFO - GET /api/students/ - 200 - 0.1030s
2025-09-16 06:20:51,925 - school_management - INFO - Fetched 48 students
2025-09-16 06:20:51,973 - school_management - INFO - GET /api/students/ - 200 - 0.0548s
2025-09-16 06:22:16,517 - school_management - INFO - Fetched 48 students
2025-09-16 06:22:16,694 - school_management - INFO - GET /api/students/ - 200 - 0.8785s
2025-09-16 06:22:17,232 - school_management - INFO - Fetched 48 students
2025-09-16 06:22:17,382 - school_management - INFO - GET /api/students/ - 200 - 0.3264s
2025-09-16 10:10:00,045 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 10:10:00,074 - school_management - INFO - GET /api/students/grades - 200 - 0.5054s
2025-09-16 10:10:00,181 - school_management - INFO - Fetched available grades: ['Grade 7']
2025-09-16 10:10:00,201 - school_management - INFO - GET /api/students/grades - 200 - 0.1081s
2025-09-16 10:10:05,730 - school_management - INFO - Fetched available classes for grade Grade 7: ['W']
2025-09-16 10:10:05,737 - school_management - INFO - GET /api/students/classes/Grade 7 - 200 - 0.1192s
2025-09-16 10:10:33,664 - school_management - INFO - Fetched 48 students
2025-09-16 10:10:33,764 - school_management - INFO - GET /api/students/ - 200 - 0.1677s
2025-09-16 10:10:33,847 - school_management - INFO - Fetched 48 students
2025-09-16 10:10:33,886 - school_management - INFO - GET /api/students/ - 200 - 0.0905s
2025-09-16 10:12:37,254 - school_management - INFO - SMSService initialized with Base URL: https://www.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 10:12:37,355 - school_management - INFO - Successfully resolved www.winsms.co.za to 104.26.14.184
2025-09-16 10:12:37,878 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: HTTP 404: {"timeStamp":"20250916121237548","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 10:12:38,020 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: HTTP 404: {"timeStamp":"20250916121237685","version":"1.0","statusCode":404,"errorMessage":"The resource requested does not exist. Please verify the path, spelling, and capitalisation"}
2025-09-16 10:12:38,112 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 10:12:38,118 - school_management - INFO - POST /api/sms/fee-notification - 500 - 1.1145s
2025-09-16 12:23:52,186 - school_management - INFO - SMSService initialized with Base URL: https://www.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 12:23:53,398 - school_management - INFO - Successfully resolved www.winsms.co.za to 104.26.15.184
2025-09-16 10:34:29,901 - school_management - INFO - SMSService initialized with Base URL: https://www.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 10:34:30,073 - school_management - INFO - Successfully resolved www.winsms.co.za to 104.26.14.184
2025-09-16 10:34:30,630 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: HTTP 422: {"timeStamp":"20250916123430298","version":"1.0","statusCode":422,"errorMessage":"A valid 'message' parameter must be specified. Please note the capitalisation of 'message'."}
2025-09-16 10:34:30,827 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: HTTP 422: {"timeStamp":"20250916123430466","version":"1.0","statusCode":422,"errorMessage":"A valid 'message' parameter must be specified. Please note the capitalisation of 'message'."}
2025-09-16 10:34:30,888 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 10:34:30,894 - school_management - INFO - POST /api/sms/fee-notification - 500 - 1.1148s
2025-09-16 10:34:51,962 - school_management - INFO - SMSService initialized with Base URL: https://www.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 10:34:51,982 - school_management - INFO - Successfully resolved www.winsms.co.za to 104.26.14.184
2025-09-16 10:34:52,403 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: HTTP 422: {"timeStamp":"20250916123452074","version":"1.0","statusCode":422,"errorMessage":"A valid 'message' parameter must be specified. Please note the capitalisation of 'message'."}
2025-09-16 10:34:52,546 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: HTTP 422: {"timeStamp":"20250916123452229","version":"1.0","statusCode":422,"errorMessage":"A valid 'message' parameter must be specified. Please note the capitalisation of 'message'."}
2025-09-16 10:34:52,622 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 10:34:52,630 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.7520s
2025-09-16 10:36:16,721 - school_management - INFO - SMSService initialized with Base URL: https://www.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 10:36:16,733 - school_management - INFO - Successfully resolved www.winsms.co.za to 104.26.14.184
2025-09-16 10:36:17,065 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: HTTP 422: {"timeStamp":"20250916123616745","version":"1.0","statusCode":422,"errorMessage":"A valid 'message' parameter must be specified. Please note the capitalisation of 'message'."}
2025-09-16 10:36:17,189 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: HTTP 422: {"timeStamp":"20250916123616872","version":"1.0","statusCode":422,"errorMessage":"A valid 'message' parameter must be specified. Please note the capitalisation of 'message'."}
2025-09-16 10:36:17,243 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 10:36:17,249 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.6259s
2025-09-16 10:39:59,700 - school_management - INFO - SMSService initialized with Base URL: https://www.winsms.co.za/api/rest/v1 and API Key (first 5 chars): D1CA7*****
2025-09-16 10:39:59,748 - school_management - INFO - Successfully resolved www.winsms.co.za to 104.26.15.184
2025-09-16 10:40:00,140 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27699977011: HTTP 422: {"timeStamp":"20250916123959774","version":"1.0","statusCode":422,"errorMessage":"A valid 'message' parameter must be specified. Please note the capitalisation of 'message'."}
2025-09-16 10:40:00,306 - school_management - ERROR - SMS send failed for student 67865744-06f1-4d68-bd85-81775e656bd2 to 27798984117: HTTP 422: {"timeStamp":"20250916123959959","version":"1.0","statusCode":422,"errorMessage":"A valid 'message' parameter must be specified. Please note the capitalisation of 'message'."}
2025-09-16 10:40:00,388 - school_management - ERROR - Transaction failed for fee notification SMS: 500: Failed to send any SMS notifications.
2025-09-16 10:40:00,403 - school_management - INFO - POST /api/sms/fee-notification - 500 - 0.8126s
